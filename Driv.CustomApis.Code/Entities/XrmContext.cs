//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;

[assembly: ProxyTypesAssembly()]




/// <summary>
/// <para>Contains information about the settable variable: its type, default value, and etc.</para>
/// <para>Display Name: Environment Variable Definition</para>
/// </summary>
[EntityLogicalName("environmentvariabledefinition")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class EnvironmentVariableDefinition : ExtendedEntity<EnvironmentVariableDefinitionState, EnvironmentVariableDefinition_statuscode> {
    
    public const string EntityLogicalName = "environmentvariabledefinition";
    
    public const int EntityTypeCode = 380;
    
    public EnvironmentVariableDefinition() : 
            base(EntityLogicalName) {
    }
    
    public EnvironmentVariableDefinition(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("schemaname");
        }
    }
    
    [AttributeLogicalName("environmentvariabledefinitionid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("environmentvariabledefinitionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Environment Variable Definition</para>
    /// </summary>
    [AttributeLogicalName("environmentvariabledefinitionid")]
    public Guid? EnvironmentVariableDefinitionId {
        get {
            return GetAttributeValue<Guid?>("environmentvariabledefinitionid");
        }
        set {
            SetId("environmentvariabledefinitionid", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name: API Id</para>
    /// </summary>
    [AttributeLogicalName("apiid")]
    public string ApiId {
        get {
            return GetAttributeValue<string>("apiid");
        }
        set {
            SetAttributeValue("apiid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Component State</para>
    /// </summary>
    [AttributeLogicalName("componentstate")]
    public componentstate? ComponentState {
        get {
            return GetOptionSetValue<componentstate>("componentstate");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Connection Reference associated with Environment Variable Definition.</para>
    /// <para>Display Name: Connection Reference</para>
    /// </summary>
    [AttributeLogicalName("connectionreferenceid")]
    public EntityReference ConnectionReferenceId {
        get {
            return GetAttributeValue<EntityReference>("connectionreferenceid");
        }
        set {
            SetAttributeValue("connectionreferenceid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Default variable value to be used if no associated EnvironmentVariableValue entities exist.</para>
    /// <para>Display Name: Default Value</para>
    /// </summary>
    [AttributeLogicalName("defaultvalue")]
    public string DefaultValue {
        get {
            return GetAttributeValue<string>("defaultvalue");
        }
        set {
            SetAttributeValue("defaultvalue", value);
        }
    }
    
    /// <summary>
    /// <para>Description of the variable definition.</para>
    /// <para>Display Name: Description</para>
    /// </summary>
    [AttributeLogicalName("description")]
    public string Description {
        get {
            return GetAttributeValue<string>("description");
        }
        set {
            SetAttributeValue("description", value);
        }
    }
    
    /// <summary>
    /// <para>Display Name of the variable definition.</para>
    /// <para>Display Name: Display Name</para>
    /// </summary>
    [AttributeLogicalName("displayname")]
    public string DisplayName {
        get {
            return GetAttributeValue<string>("displayname");
        }
        set {
            SetAttributeValue("displayname", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// </summary>
    [AttributeLogicalName("environmentvariabledefinitionidunique")]
    public Guid? EnvironmentVariableDefinitionIdUnique {
        get {
            return GetAttributeValue<Guid?>("environmentvariabledefinitionidunique");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Hint</para>
    /// </summary>
    [AttributeLogicalName("hint")]
    public string Hint {
        get {
            return GetAttributeValue<string>("hint");
        }
        set {
            SetAttributeValue("hint", value);
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Version in which the form is introduced.</para>
    /// <para>Display Name: Introduced Version</para>
    /// </summary>
    [AttributeLogicalName("introducedversion")]
    public string IntroducedVersion {
        get {
            return GetAttributeValue<string>("introducedversion");
        }
        set {
            SetAttributeValue("introducedversion", value);
        }
    }
    
    /// <summary>
    /// <para>Tells whether the component can be customized.</para>
    /// <para>Display Name: Customizable</para>
    /// </summary>
    [AttributeLogicalName("iscustomizable")]
    public BooleanManagedProperty IsCustomizable {
        get {
            return GetAttributeValue<BooleanManagedProperty>("iscustomizable");
        }
        set {
            SetAttributeValue("iscustomizable", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether the solution component is part of a managed solution.</para>
    /// <para>Display Name: Is Managed</para>
    /// </summary>
    [AttributeLogicalName("ismanaged")]
    public bool? IsManaged {
        get {
            return GetAttributeValue<bool?>("ismanaged");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Is Required</para>
    /// </summary>
    [AttributeLogicalName("isrequired")]
    public bool? IsRequired {
        get {
            return GetAttributeValue<bool?>("isrequired");
        }
        set {
            SetAttributeValue("isrequired", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Record Overwrite Time</para>
    /// </summary>
    [AttributeLogicalName("overwritetime")]
    public DateTime? OverwriteTime {
        get {
            return GetAttributeValue<DateTime?>("overwritetime");
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Display Name: Parameter Key</para>
    /// </summary>
    [AttributeLogicalName("parameterkey")]
    public string ParameterKey {
        get {
            return GetAttributeValue<string>("parameterkey");
        }
        set {
            SetAttributeValue("parameterkey", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Environment Variable Definition associated with Environment Variable Definition.</para>
    /// <para>Display Name: Parent Definition</para>
    /// </summary>
    [AttributeLogicalName("parentdefinitionid")]
    public EntityReference ParentDefinitionId {
        get {
            return GetAttributeValue<EntityReference>("parentdefinitionid");
        }
        set {
            SetAttributeValue("parentdefinitionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique entity name.</para>
    /// <para>Display Name: Schema Name</para>
    /// </summary>
    [AttributeLogicalName("schemaname")]
    public string SchemaName {
        get {
            return GetAttributeValue<string>("schemaname");
        }
        set {
            SetAttributeValue("schemaname", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the associated solution.</para>
    /// <para>Display Name: Solution</para>
    /// </summary>
    [AttributeLogicalName("solutionid")]
    public Guid? SolutionId {
        get {
            return GetAttributeValue<Guid?>("solutionid");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Environment variable value type.</para>
    /// <para>Display Name: Type</para>
    /// </summary>
    [AttributeLogicalName("type")]
    public EnvironmentVariableDefinition_Type? Type {
        get {
            return GetOptionSetValue<EnvironmentVariableDefinition_Type>("type");
        }
        set {
            SetOptionSetValue("type", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Value Schema</para>
    /// </summary>
    [AttributeLogicalName("valueschema")]
    public string ValueSchema {
        get {
            return GetAttributeValue<string>("valueschema");
        }
        set {
            SetAttributeValue("valueschema", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the Environment Variable Definition</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    public EnvironmentVariableDefinitionState? statecode {
        get {
            return GetOptionSetValue<EnvironmentVariableDefinitionState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Environment Variable Definition</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    public EnvironmentVariableDefinition_statuscode? statuscode {
        get {
            return GetOptionSetValue<EnvironmentVariableDefinition_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [RelationshipSchemaName("envdefinition_envdefinition", EntityRole.Referenced)]
    public IEnumerable<EnvironmentVariableDefinition> Referencedenvdefinition_envdefinition {
        get {
            return GetRelatedEntities<EnvironmentVariableDefinition>("envdefinition_envdefinition", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("envdefinition_envdefinition", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("parentdefinitionid")]
    [RelationshipSchemaName("envdefinition_envdefinition", EntityRole.Referencing)]
    public EnvironmentVariableDefinition Referencingenvdefinition_envdefinition {
        get {
            return GetRelatedEntity<EnvironmentVariableDefinition>("envdefinition_envdefinition", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("envdefinition_envdefinition", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("environmentvariabledefinition_environmentvariablevalue")]
    public IEnumerable<EnvironmentVariableValue> environmentvariabledefinition_environmentvariablevalue {
        get {
            return GetRelatedEntities<EnvironmentVariableValue>("environmentvariabledefinition_environmentvariablevalue", null);
        }
        set {
            SetRelatedEntities("environmentvariabledefinition_environmentvariablevalue", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_environmentvariabledefinition_createdby")]
    public SystemUser lk_environmentvariabledefinition_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_environmentvariabledefinition_createdby", null);
        }
        set {
            SetRelatedEntity("lk_environmentvariabledefinition_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_environmentvariabledefinition_createdonbehalfby")]
    public SystemUser lk_environmentvariabledefinition_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_environmentvariabledefinition_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_environmentvariabledefinition_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_environmentvariabledefinition_modifiedby")]
    public SystemUser lk_environmentvariabledefinition_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_environmentvariabledefinition_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_environmentvariabledefinition_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_environmentvariabledefinition_modifiedonbehalfby")]
    public SystemUser lk_environmentvariabledefinition_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_environmentvariabledefinition_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_environmentvariabledefinition_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_environmentvariabledefinition")]
    public SystemUser user_environmentvariabledefinition {
        get {
            return GetRelatedEntity<SystemUser>("user_environmentvariabledefinition", null);
        }
        set {
            SetRelatedEntity("user_environmentvariabledefinition", null, value);
        }
    }
    
    public static EnvironmentVariableDefinition Retrieve(IOrganizationService service, Guid id, params Expression<Func<EnvironmentVariableDefinition,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Holds the value for the associated EnvironmentVariableDefinition entity.</para>
/// <para>Display Name: Environment Variable Value</para>
/// </summary>
[EntityLogicalName("environmentvariablevalue")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class EnvironmentVariableValue : ExtendedEntity<EnvironmentVariableValueState, EnvironmentVariableValue_statuscode> {
    
    public const string EntityLogicalName = "environmentvariablevalue";
    
    public const int EntityTypeCode = 381;
    
    public EnvironmentVariableValue() : 
            base(EntityLogicalName) {
    }
    
    public EnvironmentVariableValue(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("schemaname");
        }
    }
    
    [AttributeLogicalName("environmentvariablevalueid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("environmentvariablevalueid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for entity instances</para>
    /// <para>Display Name: Environment Variable Value</para>
    /// </summary>
    [AttributeLogicalName("environmentvariablevalueid")]
    public Guid? EnvironmentVariableValueId {
        get {
            return GetAttributeValue<Guid?>("environmentvariablevalueid");
        }
        set {
            SetId("environmentvariablevalueid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Component State</para>
    /// </summary>
    [AttributeLogicalName("componentstate")]
    public componentstate? ComponentState {
        get {
            return GetOptionSetValue<componentstate>("componentstate");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the record.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for Environment Variable Definition associated with Environment Variable Value.</para>
    /// <para>Display Name: Environment Variable Definition</para>
    /// </summary>
    [AttributeLogicalName("environmentvariabledefinitionid")]
    public EntityReference EnvironmentVariableDefinitionId {
        get {
            return GetAttributeValue<EntityReference>("environmentvariabledefinitionid");
        }
        set {
            SetAttributeValue("environmentvariabledefinitionid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// </summary>
    [AttributeLogicalName("environmentvariablevalueidunique")]
    public Guid? EnvironmentVariableValueIdUnique {
        get {
            return GetAttributeValue<Guid?>("environmentvariablevalueidunique");
        }
    }
    
    /// <summary>
    /// <para>Sequence number of the import that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Version in which the form is introduced.</para>
    /// <para>Display Name: Introduced Version</para>
    /// </summary>
    [AttributeLogicalName("introducedversion")]
    public string IntroducedVersion {
        get {
            return GetAttributeValue<string>("introducedversion");
        }
        set {
            SetAttributeValue("introducedversion", value);
        }
    }
    
    /// <summary>
    /// <para>Tells whether the component can be customized.</para>
    /// <para>Display Name: Customizable</para>
    /// </summary>
    [AttributeLogicalName("iscustomizable")]
    public BooleanManagedProperty IsCustomizable {
        get {
            return GetAttributeValue<BooleanManagedProperty>("iscustomizable");
        }
        set {
            SetAttributeValue("iscustomizable", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether the solution component is part of a managed solution.</para>
    /// <para>Display Name: Is Managed</para>
    /// </summary>
    [AttributeLogicalName("ismanaged")]
    public bool? IsManaged {
        get {
            return GetAttributeValue<bool?>("ismanaged");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who modified the record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who modified the record.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Record Overwrite Time</para>
    /// </summary>
    [AttributeLogicalName("overwritetime")]
    public DateTime? OverwriteTime {
        get {
            return GetAttributeValue<DateTime?>("overwritetime");
        }
    }
    
    /// <summary>
    /// <para>Owner Id</para>
    /// <para>Display Name: Owner</para>
    /// </summary>
    [AttributeLogicalName("ownerid")]
    public EntityReference OwnerId {
        get {
            return GetAttributeValue<EntityReference>("ownerid");
        }
        set {
            SetAttributeValue("ownerid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the business unit that owns the record</para>
    /// <para>Display Name: Owning Business Unit</para>
    /// </summary>
    [AttributeLogicalName("owningbusinessunit")]
    public EntityReference OwningBusinessUnit {
        get {
            return GetAttributeValue<EntityReference>("owningbusinessunit");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the team that owns the record.</para>
    /// <para>Display Name: Owning Team</para>
    /// </summary>
    [AttributeLogicalName("owningteam")]
    public EntityReference OwningTeam {
        get {
            return GetAttributeValue<EntityReference>("owningteam");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user that owns the record.</para>
    /// <para>Display Name: Owning User</para>
    /// </summary>
    [AttributeLogicalName("owninguser")]
    public EntityReference OwningUser {
        get {
            return GetAttributeValue<EntityReference>("owninguser");
        }
    }
    
    /// <summary>
    /// <para>Unique entity name.</para>
    /// <para>Display Name: Schema Name</para>
    /// </summary>
    [AttributeLogicalName("schemaname")]
    public string SchemaName {
        get {
            return GetAttributeValue<string>("schemaname");
        }
        set {
            SetAttributeValue("schemaname", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the associated solution.</para>
    /// <para>Display Name: Solution</para>
    /// </summary>
    [AttributeLogicalName("solutionid")]
    public Guid? SolutionId {
        get {
            return GetAttributeValue<Guid?>("solutionid");
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Contains the actual variable data.</para>
    /// <para>Display Name: Value</para>
    /// </summary>
    [AttributeLogicalName("value")]
    public string Value {
        get {
            return GetAttributeValue<string>("value");
        }
        set {
            SetAttributeValue("value", value);
        }
    }
    
    /// <summary>
    /// <para>Version Number</para>
    /// <para>Display Name: Version Number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Status of the Environment Variable Value</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("statecode")]
    public EnvironmentVariableValueState? statecode {
        get {
            return GetOptionSetValue<EnvironmentVariableValueState>("statecode");
        }
        set {
            SetOptionSetValue("statecode", value);
        }
    }
    
    /// <summary>
    /// <para>Reason for the status of the Environment Variable Value</para>
    /// <para>Display Name: Status Reason</para>
    /// </summary>
    [AttributeLogicalName("statuscode")]
    public EnvironmentVariableValue_statuscode? statuscode {
        get {
            return GetOptionSetValue<EnvironmentVariableValue_statuscode>("statuscode");
        }
        set {
            SetOptionSetValue("statuscode", value);
        }
    }
    
    [AttributeLogicalName("environmentvariabledefinitionid")]
    [RelationshipSchemaName("environmentvariabledefinition_environmentvariablevalue")]
    public EnvironmentVariableDefinition environmentvariabledefinition_environmentvariablevalue {
        get {
            return GetRelatedEntity<EnvironmentVariableDefinition>("environmentvariabledefinition_environmentvariablevalue", null);
        }
        set {
            SetRelatedEntity("environmentvariabledefinition_environmentvariablevalue", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_environmentvariablevalue_createdby")]
    public SystemUser lk_environmentvariablevalue_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_environmentvariablevalue_createdby", null);
        }
        set {
            SetRelatedEntity("lk_environmentvariablevalue_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_environmentvariablevalue_createdonbehalfby")]
    public SystemUser lk_environmentvariablevalue_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_environmentvariablevalue_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_environmentvariablevalue_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_environmentvariablevalue_modifiedby")]
    public SystemUser lk_environmentvariablevalue_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_environmentvariablevalue_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_environmentvariablevalue_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_environmentvariablevalue_modifiedonbehalfby")]
    public SystemUser lk_environmentvariablevalue_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_environmentvariablevalue_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_environmentvariablevalue_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("owninguser")]
    [RelationshipSchemaName("user_environmentvariablevalue")]
    public SystemUser user_environmentvariablevalue {
        get {
            return GetRelatedEntity<SystemUser>("user_environmentvariablevalue", null);
        }
        set {
            SetRelatedEntity("user_environmentvariablevalue", null, value);
        }
    }
    
    public static EnvironmentVariableValue Retrieve(IOrganizationService service, Guid id, params Expression<Func<EnvironmentVariableValue,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Person with access to the Microsoft CRM system and who owns objects in the Microsoft CRM database.</para>
/// <para>Display Name: User</para>
/// </summary>
[EntityLogicalName("systemuser")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class SystemUser : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "systemuser";
    
    public const int EntityTypeCode = 8;
    
    public SystemUser() : 
            base(EntityLogicalName) {
    }
    
    public SystemUser(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("fullname");
        }
    }
    
    [AttributeLogicalName("systemuserid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("systemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for the user.</para>
    /// <para>Display Name: User</para>
    /// </summary>
    [AttributeLogicalName("systemuserid")]
    public Guid? SystemUserId {
        get {
            return GetAttributeValue<Guid?>("systemuserid");
        }
        set {
            SetId("systemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>Type of user.</para>
    /// <para>Display Name: Access Mode</para>
    /// </summary>
    [AttributeLogicalName("accessmode")]
    public SystemUser_AccessMode? AccessMode {
        get {
            return GetOptionSetValue<SystemUser_AccessMode>("accessmode");
        }
        set {
            SetOptionSetValue("accessmode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for address 1.</para>
    /// <para>Display Name: Address 1: ID</para>
    /// </summary>
    [AttributeLogicalName("address1_addressid")]
    public Guid? Address1_AddressId {
        get {
            return GetAttributeValue<Guid?>("address1_addressid");
        }
        set {
            SetAttributeValue("address1_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
    /// <para>Display Name: Address 1: Address Type</para>
    /// </summary>
    [AttributeLogicalName("address1_addresstypecode")]
    public SystemUser_Address1_AddressTypeCode? Address1_AddressTypeCode {
        get {
            return GetOptionSetValue<SystemUser_Address1_AddressTypeCode>("address1_addresstypecode");
        }
        set {
            SetOptionSetValue("address1_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>City name for address 1.</para>
    /// <para>Display Name: City</para>
    /// </summary>
    [AttributeLogicalName("address1_city")]
    public string Address1_City {
        get {
            return GetAttributeValue<string>("address1_city");
        }
        set {
            SetAttributeValue("address1_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete primary address.</para>
    /// <para>Display Name: Address</para>
    /// </summary>
    [AttributeLogicalName("address1_composite")]
    public string Address1_Composite {
        get {
            return GetAttributeValue<string>("address1_composite");
        }
    }
    
    /// <summary>
    /// <para>Country/region name in address 1.</para>
    /// <para>Display Name: Country/Region</para>
    /// </summary>
    [AttributeLogicalName("address1_country")]
    public string Address1_Country {
        get {
            return GetAttributeValue<string>("address1_country");
        }
        set {
            SetAttributeValue("address1_country", value);
        }
    }
    
    /// <summary>
    /// <para>County name for address 1.</para>
    /// <para>Display Name: Address 1: County</para>
    /// </summary>
    [AttributeLogicalName("address1_county")]
    public string Address1_County {
        get {
            return GetAttributeValue<string>("address1_county");
        }
        set {
            SetAttributeValue("address1_county", value);
        }
    }
    
    /// <summary>
    /// <para>Fax number for address 1.</para>
    /// <para>Display Name: Address 1: Fax</para>
    /// </summary>
    [AttributeLogicalName("address1_fax")]
    public string Address1_Fax {
        get {
            return GetAttributeValue<string>("address1_fax");
        }
        set {
            SetAttributeValue("address1_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Latitude for address 1.</para>
    /// <para>Display Name: Address 1: Latitude</para>
    /// </summary>
    [AttributeLogicalName("address1_latitude")]
    public double? Address1_Latitude {
        get {
            return GetAttributeValue<double?>("address1_latitude");
        }
        set {
            SetAttributeValue("address1_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>First line for entering address 1 information.</para>
    /// <para>Display Name: Street 1</para>
    /// </summary>
    [AttributeLogicalName("address1_line1")]
    public string Address1_Line1 {
        get {
            return GetAttributeValue<string>("address1_line1");
        }
        set {
            SetAttributeValue("address1_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Second line for entering address 1 information.</para>
    /// <para>Display Name: Street 2</para>
    /// </summary>
    [AttributeLogicalName("address1_line2")]
    public string Address1_Line2 {
        get {
            return GetAttributeValue<string>("address1_line2");
        }
        set {
            SetAttributeValue("address1_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Third line for entering address 1 information.</para>
    /// <para>Display Name: Street 3</para>
    /// </summary>
    [AttributeLogicalName("address1_line3")]
    public string Address1_Line3 {
        get {
            return GetAttributeValue<string>("address1_line3");
        }
        set {
            SetAttributeValue("address1_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Longitude for address 1.</para>
    /// <para>Display Name: Address 1: Longitude</para>
    /// </summary>
    [AttributeLogicalName("address1_longitude")]
    public double? Address1_Longitude {
        get {
            return GetAttributeValue<double?>("address1_longitude");
        }
        set {
            SetAttributeValue("address1_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Name to enter for address 1.</para>
    /// <para>Display Name: Address 1: Name</para>
    /// </summary>
    [AttributeLogicalName("address1_name")]
    public string Address1_Name {
        get {
            return GetAttributeValue<string>("address1_name");
        }
        set {
            SetAttributeValue("address1_name", value);
        }
    }
    
    /// <summary>
    /// <para>Post office box number for address 1.</para>
    /// <para>Display Name: Address 1: Post Office Box</para>
    /// </summary>
    [AttributeLogicalName("address1_postofficebox")]
    public string Address1_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address1_postofficebox");
        }
        set {
            SetAttributeValue("address1_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>ZIP Code or postal code for address 1.</para>
    /// <para>Display Name: ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("address1_postalcode")]
    public string Address1_PostalCode {
        get {
            return GetAttributeValue<string>("address1_postalcode");
        }
        set {
            SetAttributeValue("address1_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Method of shipment for address 1.</para>
    /// <para>Display Name: Address 1: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("address1_shippingmethodcode")]
    public SystemUser_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
        get {
            return GetOptionSetValue<SystemUser_Address1_ShippingMethodCode>("address1_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address1_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>State or province for address 1.</para>
    /// <para>Display Name: State/Province</para>
    /// </summary>
    [AttributeLogicalName("address1_stateorprovince")]
    public string Address1_StateOrProvince {
        get {
            return GetAttributeValue<string>("address1_stateorprovince");
        }
        set {
            SetAttributeValue("address1_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>First telephone number associated with address 1.</para>
    /// <para>Display Name: Main Phone</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone1")]
    public string Address1_Telephone1 {
        get {
            return GetAttributeValue<string>("address1_telephone1");
        }
        set {
            SetAttributeValue("address1_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Second telephone number associated with address 1.</para>
    /// <para>Display Name: Other Phone</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone2")]
    public string Address1_Telephone2 {
        get {
            return GetAttributeValue<string>("address1_telephone2");
        }
        set {
            SetAttributeValue("address1_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Third telephone number associated with address 1.</para>
    /// <para>Display Name: Pager</para>
    /// </summary>
    [AttributeLogicalName("address1_telephone3")]
    public string Address1_Telephone3 {
        get {
            return GetAttributeValue<string>("address1_telephone3");
        }
        set {
            SetAttributeValue("address1_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>United Parcel Service (UPS) zone for address 1.</para>
    /// <para>Display Name: Address 1: UPS Zone</para>
    /// </summary>
    [AttributeLogicalName("address1_upszone")]
    public string Address1_UPSZone {
        get {
            return GetAttributeValue<string>("address1_upszone");
        }
        set {
            SetAttributeValue("address1_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
    /// <para>Display Name: Address 1: UTC Offset</para>
    /// </summary>
    [AttributeLogicalName("address1_utcoffset")]
    public int? Address1_UTCOffset {
        get {
            return GetAttributeValue<int?>("address1_utcoffset");
        }
        set {
            SetAttributeValue("address1_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier for address 2.</para>
    /// <para>Display Name: Address 2: ID</para>
    /// </summary>
    [AttributeLogicalName("address2_addressid")]
    public Guid? Address2_AddressId {
        get {
            return GetAttributeValue<Guid?>("address2_addressid");
        }
        set {
            SetAttributeValue("address2_addressid", value);
        }
    }
    
    /// <summary>
    /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
    /// <para>Display Name: Address 2: Address Type</para>
    /// </summary>
    [AttributeLogicalName("address2_addresstypecode")]
    public SystemUser_Address2_AddressTypeCode? Address2_AddressTypeCode {
        get {
            return GetOptionSetValue<SystemUser_Address2_AddressTypeCode>("address2_addresstypecode");
        }
        set {
            SetOptionSetValue("address2_addresstypecode", value);
        }
    }
    
    /// <summary>
    /// <para>City name for address 2.</para>
    /// <para>Display Name: Other City</para>
    /// </summary>
    [AttributeLogicalName("address2_city")]
    public string Address2_City {
        get {
            return GetAttributeValue<string>("address2_city");
        }
        set {
            SetAttributeValue("address2_city", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the complete secondary address.</para>
    /// <para>Display Name: Other Address</para>
    /// </summary>
    [AttributeLogicalName("address2_composite")]
    public string Address2_Composite {
        get {
            return GetAttributeValue<string>("address2_composite");
        }
    }
    
    /// <summary>
    /// <para>Country/region name in address 2.</para>
    /// <para>Display Name: Other Country/Region</para>
    /// </summary>
    [AttributeLogicalName("address2_country")]
    public string Address2_Country {
        get {
            return GetAttributeValue<string>("address2_country");
        }
        set {
            SetAttributeValue("address2_country", value);
        }
    }
    
    /// <summary>
    /// <para>County name for address 2.</para>
    /// <para>Display Name: Address 2: County</para>
    /// </summary>
    [AttributeLogicalName("address2_county")]
    public string Address2_County {
        get {
            return GetAttributeValue<string>("address2_county");
        }
        set {
            SetAttributeValue("address2_county", value);
        }
    }
    
    /// <summary>
    /// <para>Fax number for address 2.</para>
    /// <para>Display Name: Address 2: Fax</para>
    /// </summary>
    [AttributeLogicalName("address2_fax")]
    public string Address2_Fax {
        get {
            return GetAttributeValue<string>("address2_fax");
        }
        set {
            SetAttributeValue("address2_fax", value);
        }
    }
    
    /// <summary>
    /// <para>Latitude for address 2.</para>
    /// <para>Display Name: Address 2: Latitude</para>
    /// </summary>
    [AttributeLogicalName("address2_latitude")]
    public double? Address2_Latitude {
        get {
            return GetAttributeValue<double?>("address2_latitude");
        }
        set {
            SetAttributeValue("address2_latitude", value);
        }
    }
    
    /// <summary>
    /// <para>First line for entering address 2 information.</para>
    /// <para>Display Name: Other Street 1</para>
    /// </summary>
    [AttributeLogicalName("address2_line1")]
    public string Address2_Line1 {
        get {
            return GetAttributeValue<string>("address2_line1");
        }
        set {
            SetAttributeValue("address2_line1", value);
        }
    }
    
    /// <summary>
    /// <para>Second line for entering address 2 information.</para>
    /// <para>Display Name: Other Street 2</para>
    /// </summary>
    [AttributeLogicalName("address2_line2")]
    public string Address2_Line2 {
        get {
            return GetAttributeValue<string>("address2_line2");
        }
        set {
            SetAttributeValue("address2_line2", value);
        }
    }
    
    /// <summary>
    /// <para>Third line for entering address 2 information.</para>
    /// <para>Display Name: Other Street 3</para>
    /// </summary>
    [AttributeLogicalName("address2_line3")]
    public string Address2_Line3 {
        get {
            return GetAttributeValue<string>("address2_line3");
        }
        set {
            SetAttributeValue("address2_line3", value);
        }
    }
    
    /// <summary>
    /// <para>Longitude for address 2.</para>
    /// <para>Display Name: Address 2: Longitude</para>
    /// </summary>
    [AttributeLogicalName("address2_longitude")]
    public double? Address2_Longitude {
        get {
            return GetAttributeValue<double?>("address2_longitude");
        }
        set {
            SetAttributeValue("address2_longitude", value);
        }
    }
    
    /// <summary>
    /// <para>Name to enter for address 2.</para>
    /// <para>Display Name: Address 2: Name</para>
    /// </summary>
    [AttributeLogicalName("address2_name")]
    public string Address2_Name {
        get {
            return GetAttributeValue<string>("address2_name");
        }
        set {
            SetAttributeValue("address2_name", value);
        }
    }
    
    /// <summary>
    /// <para>Post office box number for address 2.</para>
    /// <para>Display Name: Address 2: Post Office Box</para>
    /// </summary>
    [AttributeLogicalName("address2_postofficebox")]
    public string Address2_PostOfficeBox {
        get {
            return GetAttributeValue<string>("address2_postofficebox");
        }
        set {
            SetAttributeValue("address2_postofficebox", value);
        }
    }
    
    /// <summary>
    /// <para>ZIP Code or postal code for address 2.</para>
    /// <para>Display Name: Other ZIP/Postal Code</para>
    /// </summary>
    [AttributeLogicalName("address2_postalcode")]
    public string Address2_PostalCode {
        get {
            return GetAttributeValue<string>("address2_postalcode");
        }
        set {
            SetAttributeValue("address2_postalcode", value);
        }
    }
    
    /// <summary>
    /// <para>Method of shipment for address 2.</para>
    /// <para>Display Name: Address 2: Shipping Method</para>
    /// </summary>
    [AttributeLogicalName("address2_shippingmethodcode")]
    public SystemUser_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
        get {
            return GetOptionSetValue<SystemUser_Address2_ShippingMethodCode>("address2_shippingmethodcode");
        }
        set {
            SetOptionSetValue("address2_shippingmethodcode", value);
        }
    }
    
    /// <summary>
    /// <para>State or province for address 2.</para>
    /// <para>Display Name: Other State/Province</para>
    /// </summary>
    [AttributeLogicalName("address2_stateorprovince")]
    public string Address2_StateOrProvince {
        get {
            return GetAttributeValue<string>("address2_stateorprovince");
        }
        set {
            SetAttributeValue("address2_stateorprovince", value);
        }
    }
    
    /// <summary>
    /// <para>First telephone number associated with address 2.</para>
    /// <para>Display Name: Address 2: Telephone 1</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone1")]
    public string Address2_Telephone1 {
        get {
            return GetAttributeValue<string>("address2_telephone1");
        }
        set {
            SetAttributeValue("address2_telephone1", value);
        }
    }
    
    /// <summary>
    /// <para>Second telephone number associated with address 2.</para>
    /// <para>Display Name: Address 2: Telephone 2</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone2")]
    public string Address2_Telephone2 {
        get {
            return GetAttributeValue<string>("address2_telephone2");
        }
        set {
            SetAttributeValue("address2_telephone2", value);
        }
    }
    
    /// <summary>
    /// <para>Third telephone number associated with address 2.</para>
    /// <para>Display Name: Address 2: Telephone 3</para>
    /// </summary>
    [AttributeLogicalName("address2_telephone3")]
    public string Address2_Telephone3 {
        get {
            return GetAttributeValue<string>("address2_telephone3");
        }
        set {
            SetAttributeValue("address2_telephone3", value);
        }
    }
    
    /// <summary>
    /// <para>United Parcel Service (UPS) zone for address 2.</para>
    /// <para>Display Name: Address 2: UPS Zone</para>
    /// </summary>
    [AttributeLogicalName("address2_upszone")]
    public string Address2_UPSZone {
        get {
            return GetAttributeValue<string>("address2_upszone");
        }
        set {
            SetAttributeValue("address2_upszone", value);
        }
    }
    
    /// <summary>
    /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
    /// <para>Display Name: Address 2: UTC Offset</para>
    /// </summary>
    [AttributeLogicalName("address2_utcoffset")]
    public int? Address2_UTCOffset {
        get {
            return GetAttributeValue<int?>("address2_utcoffset");
        }
        set {
            SetAttributeValue("address2_utcoffset", value);
        }
    }
    
    /// <summary>
    /// <para>The identifier for the application. This is used to access data in another application.</para>
    /// <para>Display Name: Application ID</para>
    /// </summary>
    [AttributeLogicalName("applicationid")]
    public Guid? ApplicationId {
        get {
            return GetAttributeValue<Guid?>("applicationid");
        }
        set {
            SetAttributeValue("applicationid", value);
        }
    }
    
    /// <summary>
    /// <para>The URI used as a unique logical identifier for the external app. This can be used to validate the application.</para>
    /// <para>Display Name: Application ID URI</para>
    /// </summary>
    [AttributeLogicalName("applicationiduri")]
    public string ApplicationIdUri {
        get {
            return GetAttributeValue<string>("applicationiduri");
        }
    }
    
    /// <summary>
    /// <para>This is the application directory object Id.</para>
    /// <para>Display Name: Azure AD Object ID</para>
    /// </summary>
    [AttributeLogicalName("azureactivedirectoryobjectid")]
    public Guid? AzureActiveDirectoryObjectId {
        get {
            return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit with which the user is associated.</para>
    /// <para>Display Name: Business Unit</para>
    /// </summary>
    [AttributeLogicalName("businessunitid")]
    public EntityReference BusinessUnitId {
        get {
            return GetAttributeValue<EntityReference>("businessunitid");
        }
        set {
            SetAttributeValue("businessunitid", value);
        }
    }
    
    /// <summary>
    /// <para>License type of user.</para>
    /// <para>Display Name: License Type</para>
    /// </summary>
    [AttributeLogicalName("caltype")]
    public SystemUser_CALType? CALType {
        get {
            return GetOptionSetValue<SystemUser_CALType>("caltype");
        }
        set {
            SetOptionSetValue("caltype", value);
        }
    }
    
    /// <summary>
    /// <para>Fiscal calendar associated with the user.</para>
    /// <para>Display Name: Calendar</para>
    /// </summary>
    [AttributeLogicalName("calendarid")]
    public EntityReference CalendarId {
        get {
            return GetAttributeValue<EntityReference>("calendarid");
        }
        set {
            SetAttributeValue("calendarid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the user.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the user was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the systemuser.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Indicates if default outlook filters have been populated.</para>
    /// <para>Display Name: Default Filters Populated</para>
    /// </summary>
    [AttributeLogicalName("defaultfilterspopulated")]
    public bool? DefaultFiltersPopulated {
        get {
            return GetAttributeValue<bool?>("defaultfilterspopulated");
        }
    }
    
    /// <summary>
    /// <para>Select the mailbox associated with this user.</para>
    /// <para>Display Name: Mailbox</para>
    /// </summary>
    [AttributeLogicalName("defaultmailbox")]
    public EntityReference DefaultMailbox {
        get {
            return GetAttributeValue<EntityReference>("defaultmailbox");
        }
    }
    
    /// <summary>
    /// <para>Type a default folder name for the user's OneDrive For Business location.</para>
    /// <para>Display Name: Default OneDrive for Business Folder Name</para>
    /// </summary>
    [AttributeLogicalName("defaultodbfoldername")]
    public string DefaultOdbFolderName {
        get {
            return GetAttributeValue<string>("defaultodbfoldername");
        }
    }
    
    /// <summary>
    /// <para>Reason for disabling the user.</para>
    /// <para>Display Name: Disabled Reason</para>
    /// </summary>
    [AttributeLogicalName("disabledreason")]
    public string DisabledReason {
        get {
            return GetAttributeValue<string>("disabledreason");
        }
    }
    
    /// <summary>
    /// <para>Whether to display the user in service views.</para>
    /// <para>Display Name: Display in Service Views</para>
    /// </summary>
    [AttributeLogicalName("displayinserviceviews")]
    public bool? DisplayInServiceViews {
        get {
            return GetAttributeValue<bool?>("displayinserviceviews");
        }
        set {
            SetAttributeValue("displayinserviceviews", value);
        }
    }
    
    /// <summary>
    /// <para>Active Directory domain of which the user is a member.</para>
    /// <para>Display Name: User Name</para>
    /// </summary>
    [AttributeLogicalName("domainname")]
    public string DomainName {
        get {
            return GetAttributeValue<string>("domainname");
        }
        set {
            SetAttributeValue("domainname", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the status of the primary email address.</para>
    /// <para>Display Name: Primary Email Status</para>
    /// </summary>
    [AttributeLogicalName("emailrouteraccessapproval")]
    public SystemUser_EmailRouterAccessApproval? EmailRouterAccessApproval {
        get {
            return GetOptionSetValue<SystemUser_EmailRouterAccessApproval>("emailrouteraccessapproval");
        }
        set {
            SetOptionSetValue("emailrouteraccessapproval", value);
        }
    }
    
    /// <summary>
    /// <para>Employee identifier for the user.</para>
    /// <para>Display Name: Employee</para>
    /// </summary>
    [AttributeLogicalName("employeeid")]
    public string EmployeeId {
        get {
            return GetAttributeValue<string>("employeeid");
        }
        set {
            SetAttributeValue("employeeid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Entity Image Id</para>
    /// </summary>
    [AttributeLogicalName("entityimageid")]
    public Guid? EntityImageId {
        get {
            return GetAttributeValue<Guid?>("entityimageid");
        }
    }
    
    /// <summary>
    /// <para>Exchange rate for the currency associated with the systemuser with respect to the base currency.</para>
    /// <para>Display Name: Exchange Rate</para>
    /// </summary>
    [AttributeLogicalName("exchangerate")]
    public decimal? ExchangeRate {
        get {
            return GetAttributeValue<decimal?>("exchangerate");
        }
    }
    
    /// <summary>
    /// <para>First name of the user.</para>
    /// <para>Display Name: First Name</para>
    /// </summary>
    [AttributeLogicalName("firstname")]
    public string FirstName {
        get {
            return GetAttributeValue<string>("firstname");
        }
        set {
            SetAttributeValue("firstname", value);
        }
    }
    
    /// <summary>
    /// <para>Full name of the user.</para>
    /// <para>Display Name: Full Name</para>
    /// </summary>
    [AttributeLogicalName("fullname")]
    public string FullName {
        get {
            return GetAttributeValue<string>("fullname");
        }
    }
    
    /// <summary>
    /// <para>Government identifier for the user.</para>
    /// <para>Display Name: Government</para>
    /// </summary>
    [AttributeLogicalName("governmentid")]
    public string GovernmentId {
        get {
            return GetAttributeValue<string>("governmentid");
        }
        set {
            SetAttributeValue("governmentid", value);
        }
    }
    
    /// <summary>
    /// <para>Home phone number for the user.</para>
    /// <para>Display Name: Home Phone</para>
    /// </summary>
    [AttributeLogicalName("homephone")]
    public string HomePhone {
        get {
            return GetAttributeValue<string>("homephone");
        }
        set {
            SetAttributeValue("homephone", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Unique user identity id</para>
    /// </summary>
    [AttributeLogicalName("identityid")]
    public int? IdentityId {
        get {
            return GetAttributeValue<int?>("identityid");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the data import or data migration that created this record.</para>
    /// <para>Display Name: Import Sequence Number</para>
    /// </summary>
    [AttributeLogicalName("importsequencenumber")]
    public int? ImportSequenceNumber {
        get {
            return GetAttributeValue<int?>("importsequencenumber");
        }
        set {
            SetAttributeValue("importsequencenumber", value);
        }
    }
    
    /// <summary>
    /// <para>Incoming email delivery method for the user.</para>
    /// <para>Display Name: Incoming Email Delivery Method</para>
    /// </summary>
    [AttributeLogicalName("incomingemaildeliverymethod")]
    public SystemUser_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
        get {
            return GetOptionSetValue<SystemUser_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
        }
        set {
            SetOptionSetValue("incomingemaildeliverymethod", value);
        }
    }
    
    /// <summary>
    /// <para>Internal email address for the user.</para>
    /// <para>Display Name: Primary Email</para>
    /// </summary>
    [AttributeLogicalName("internalemailaddress")]
    public string InternalEMailAddress {
        get {
            return GetAttributeValue<string>("internalemailaddress");
        }
        set {
            SetAttributeValue("internalemailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>User invitation status.</para>
    /// <para>Display Name: Invitation Status</para>
    /// </summary>
    [AttributeLogicalName("invitestatuscode")]
    public SystemUser_InviteStatusCode? InviteStatusCode {
        get {
            return GetOptionSetValue<SystemUser_InviteStatusCode>("invitestatuscode");
        }
        set {
            SetOptionSetValue("invitestatuscode", value);
        }
    }
    
    /// <summary>
    /// <para>Information about whether the user is enabled.</para>
    /// <para>Display Name: Status</para>
    /// </summary>
    [AttributeLogicalName("isdisabled")]
    public bool? IsDisabled {
        get {
            return GetAttributeValue<bool?>("isdisabled");
        }
        set {
            SetAttributeValue("isdisabled", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the status of approval of the email address by O365 Admin.</para>
    /// <para>Display Name: Email Address O365 Admin Approval Status</para>
    /// </summary>
    [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
    public bool? IsEmailAddressApprovedByO365Admin {
        get {
            return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
        }
    }
    
    /// <summary>
    /// <para>Check if user is an integration user.</para>
    /// <para>Display Name: Integration user mode</para>
    /// </summary>
    [AttributeLogicalName("isintegrationuser")]
    public bool? IsIntegrationUser {
        get {
            return GetAttributeValue<bool?>("isintegrationuser");
        }
        set {
            SetAttributeValue("isintegrationuser", value);
        }
    }
    
    /// <summary>
    /// <para>Information about whether the user is licensed.</para>
    /// <para>Display Name: User Licensed</para>
    /// </summary>
    [AttributeLogicalName("islicensed")]
    public bool? IsLicensed {
        get {
            return GetAttributeValue<bool?>("islicensed");
        }
        set {
            SetAttributeValue("islicensed", value);
        }
    }
    
    /// <summary>
    /// <para>Information about whether the user is synced with the directory.</para>
    /// <para>Display Name: User Synced</para>
    /// </summary>
    [AttributeLogicalName("issyncwithdirectory")]
    public bool? IsSyncWithDirectory {
        get {
            return GetAttributeValue<bool?>("issyncwithdirectory");
        }
        set {
            SetAttributeValue("issyncwithdirectory", value);
        }
    }
    
    /// <summary>
    /// <para>Job title of the user.</para>
    /// <para>Display Name: Job Title</para>
    /// </summary>
    [AttributeLogicalName("jobtitle")]
    public string JobTitle {
        get {
            return GetAttributeValue<string>("jobtitle");
        }
        set {
            SetAttributeValue("jobtitle", value);
        }
    }
    
    /// <summary>
    /// <para>Last name of the user.</para>
    /// <para>Display Name: Last Name</para>
    /// </summary>
    [AttributeLogicalName("lastname")]
    public string LastName {
        get {
            return GetAttributeValue<string>("lastname");
        }
        set {
            SetAttributeValue("lastname", value);
        }
    }
    
    /// <summary>
    /// <para>Middle name of the user.</para>
    /// <para>Display Name: Middle Name</para>
    /// </summary>
    [AttributeLogicalName("middlename")]
    public string MiddleName {
        get {
            return GetAttributeValue<string>("middlename");
        }
        set {
            SetAttributeValue("middlename", value);
        }
    }
    
    /// <summary>
    /// <para>Mobile alert email address for the user.</para>
    /// <para>Display Name: Mobile Alert Email</para>
    /// </summary>
    [AttributeLogicalName("mobilealertemail")]
    public string MobileAlertEMail {
        get {
            return GetAttributeValue<string>("mobilealertemail");
        }
        set {
            SetAttributeValue("mobilealertemail", value);
        }
    }
    
    /// <summary>
    /// <para>Items contained with a particular SystemUser.</para>
    /// <para>Display Name: Mobile Offline Profile</para>
    /// </summary>
    [AttributeLogicalName("mobileofflineprofileid")]
    public EntityReference MobileOfflineProfileId {
        get {
            return GetAttributeValue<EntityReference>("mobileofflineprofileid");
        }
        set {
            SetAttributeValue("mobileofflineprofileid", value);
        }
    }
    
    /// <summary>
    /// <para>Mobile phone number for the user.</para>
    /// <para>Display Name: Mobile Phone</para>
    /// </summary>
    [AttributeLogicalName("mobilephone")]
    public string MobilePhone {
        get {
            return GetAttributeValue<string>("mobilephone");
        }
        set {
            SetAttributeValue("mobilephone", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who last modified the user.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the user was last modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the systemuser.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Nickname of the user.</para>
    /// <para>Display Name: Nickname</para>
    /// </summary>
    [AttributeLogicalName("nickname")]
    public string NickName {
        get {
            return GetAttributeValue<string>("nickname");
        }
        set {
            SetAttributeValue("nickname", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the organization associated with the user.</para>
    /// <para>Display Name: Organization </para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    public Guid? OrganizationId {
        get {
            return GetAttributeValue<Guid?>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Outgoing email delivery method for the user.</para>
    /// <para>Display Name: Outgoing Email Delivery Method</para>
    /// </summary>
    [AttributeLogicalName("outgoingemaildeliverymethod")]
    public SystemUser_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
        get {
            return GetOptionSetValue<SystemUser_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
        }
        set {
            SetOptionSetValue("outgoingemaildeliverymethod", value);
        }
    }
    
    /// <summary>
    /// <para>Date and time that the record was migrated.</para>
    /// <para>Display Name: Record Created On</para>
    /// </summary>
    [AttributeLogicalName("overriddencreatedon")]
    public DateTime? OverriddenCreatedOn {
        get {
            return GetAttributeValue<DateTime?>("overriddencreatedon");
        }
        set {
            SetAttributeValue("overriddencreatedon", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the manager of the user.</para>
    /// <para>Display Name: Manager</para>
    /// </summary>
    [AttributeLogicalName("parentsystemuserid")]
    public EntityReference ParentSystemUserId {
        get {
            return GetAttributeValue<EntityReference>("parentsystemuserid");
        }
        set {
            SetAttributeValue("parentsystemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Passport Hi</para>
    /// </summary>
    [AttributeLogicalName("passporthi")]
    public int? PassportHi {
        get {
            return GetAttributeValue<int?>("passporthi");
        }
        set {
            SetAttributeValue("passporthi", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Passport Lo</para>
    /// </summary>
    [AttributeLogicalName("passportlo")]
    public int? PassportLo {
        get {
            return GetAttributeValue<int?>("passportlo");
        }
        set {
            SetAttributeValue("passportlo", value);
        }
    }
    
    /// <summary>
    /// <para>Personal email address of the user.</para>
    /// <para>Display Name: Email 2</para>
    /// </summary>
    [AttributeLogicalName("personalemailaddress")]
    public string PersonalEMailAddress {
        get {
            return GetAttributeValue<string>("personalemailaddress");
        }
        set {
            SetAttributeValue("personalemailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>URL for the Website on which a photo of the user is located.</para>
    /// <para>Display Name: Photo URL</para>
    /// </summary>
    [AttributeLogicalName("photourl")]
    public string PhotoUrl {
        get {
            return GetAttributeValue<string>("photourl");
        }
        set {
            SetAttributeValue("photourl", value);
        }
    }
    
    /// <summary>
    /// <para>User's position in hierarchical security model.</para>
    /// <para>Display Name: Position</para>
    /// </summary>
    [AttributeLogicalName("positionid")]
    public EntityReference PositionId {
        get {
            return GetAttributeValue<EntityReference>("positionid");
        }
        set {
            SetAttributeValue("positionid", value);
        }
    }
    
    /// <summary>
    /// <para>Preferred address for the user.</para>
    /// <para>Display Name: Preferred Address</para>
    /// </summary>
    [AttributeLogicalName("preferredaddresscode")]
    public SystemUser_PreferredAddressCode? PreferredAddressCode {
        get {
            return GetOptionSetValue<SystemUser_PreferredAddressCode>("preferredaddresscode");
        }
        set {
            SetOptionSetValue("preferredaddresscode", value);
        }
    }
    
    /// <summary>
    /// <para>Preferred email address for the user.</para>
    /// <para>Display Name: Preferred Email</para>
    /// </summary>
    [AttributeLogicalName("preferredemailcode")]
    public SystemUser_PreferredEmailCode? PreferredEmailCode {
        get {
            return GetOptionSetValue<SystemUser_PreferredEmailCode>("preferredemailcode");
        }
        set {
            SetOptionSetValue("preferredemailcode", value);
        }
    }
    
    /// <summary>
    /// <para>Preferred phone number for the user.</para>
    /// <para>Display Name: Preferred Phone</para>
    /// </summary>
    [AttributeLogicalName("preferredphonecode")]
    public SystemUser_PreferredPhoneCode? PreferredPhoneCode {
        get {
            return GetOptionSetValue<SystemUser_PreferredPhoneCode>("preferredphonecode");
        }
        set {
            SetOptionSetValue("preferredphonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the process.</para>
    /// <para>Display Name: Process</para>
    /// </summary>
    [AttributeLogicalName("processid")]
    public Guid? ProcessId {
        get {
            return GetAttributeValue<Guid?>("processid");
        }
        set {
            SetAttributeValue("processid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the default queue for the user.</para>
    /// <para>Display Name: Default Queue</para>
    /// </summary>
    [AttributeLogicalName("queueid")]
    public EntityReference QueueId {
        get {
            return GetAttributeValue<EntityReference>("queueid");
        }
        set {
            SetAttributeValue("queueid", value);
        }
    }
    
    /// <summary>
    /// <para>Salutation for correspondence with the user.</para>
    /// <para>Display Name: Salutation</para>
    /// </summary>
    [AttributeLogicalName("salutation")]
    public string Salutation {
        get {
            return GetAttributeValue<string>("salutation");
        }
        set {
            SetAttributeValue("salutation", value);
        }
    }
    
    /// <summary>
    /// <para>Check if user is a setup user.</para>
    /// <para>Display Name: Restricted Access Mode</para>
    /// </summary>
    [AttributeLogicalName("setupuser")]
    public bool? SetupUser {
        get {
            return GetAttributeValue<bool?>("setupuser");
        }
        set {
            SetAttributeValue("setupuser", value);
        }
    }
    
    /// <summary>
    /// <para>SharePoint Work Email Address</para>
    /// <para>Display Name: SharePoint Email Address</para>
    /// </summary>
    [AttributeLogicalName("sharepointemailaddress")]
    public string SharePointEmailAddress {
        get {
            return GetAttributeValue<string>("sharepointemailaddress");
        }
        set {
            SetAttributeValue("sharepointemailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>Skill set of the user.</para>
    /// <para>Display Name: Skills</para>
    /// </summary>
    [AttributeLogicalName("skills")]
    public string Skills {
        get {
            return GetAttributeValue<string>("skills");
        }
        set {
            SetAttributeValue("skills", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the ID of the stage.</para>
    /// <para>Display Name: (Deprecated) Process Stage</para>
    /// </summary>
    [AttributeLogicalName("stageid")]
    public Guid? StageId {
        get {
            return GetAttributeValue<Guid?>("stageid");
        }
        set {
            SetAttributeValue("stageid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the territory to which the user is assigned.</para>
    /// <para>Display Name: Territory</para>
    /// </summary>
    [AttributeLogicalName("territoryid")]
    public EntityReference TerritoryId {
        get {
            return GetAttributeValue<EntityReference>("territoryid");
        }
        set {
            SetAttributeValue("territoryid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: Time Zone Rule Version Number</para>
    /// </summary>
    [AttributeLogicalName("timezoneruleversionnumber")]
    public int? TimeZoneRuleVersionNumber {
        get {
            return GetAttributeValue<int?>("timezoneruleversionnumber");
        }
        set {
            SetAttributeValue("timezoneruleversionnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Title of the user.</para>
    /// <para>Display Name: Title</para>
    /// </summary>
    [AttributeLogicalName("title")]
    public string Title {
        get {
            return GetAttributeValue<string>("title");
        }
        set {
            SetAttributeValue("title", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the currency associated with the systemuser.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// <para>Display Name: (Deprecated) Traversed Path</para>
    /// </summary>
    [AttributeLogicalName("traversedpath")]
    public string TraversedPath {
        get {
            return GetAttributeValue<string>("traversedpath");
        }
        set {
            SetAttributeValue("traversedpath", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone code that was in use when the record was created.</para>
    /// <para>Display Name: UTC Conversion Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("utcconversiontimezonecode")]
    public int? UTCConversionTimeZoneCode {
        get {
            return GetAttributeValue<int?>("utcconversiontimezonecode");
        }
        set {
            SetAttributeValue("utcconversiontimezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the type of user license.</para>
    /// <para>Display Name: User License Type</para>
    /// </summary>
    [AttributeLogicalName("userlicensetype")]
    public int? UserLicenseType {
        get {
            return GetAttributeValue<int?>("userlicensetype");
        }
        set {
            SetAttributeValue("userlicensetype", value);
        }
    }
    
    /// <summary>
    /// <para> User PUID User Identifiable Information</para>
    /// <para>Display Name: User PUID</para>
    /// </summary>
    [AttributeLogicalName("userpuid")]
    public string UserPuid {
        get {
            return GetAttributeValue<string>("userpuid");
        }
    }
    
    /// <summary>
    /// <para>Version number of the user.</para>
    /// <para>Display Name: Version number</para>
    /// </summary>
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>Windows Live ID</para>
    /// <para>Display Name: Windows Live ID</para>
    /// </summary>
    [AttributeLogicalName("windowsliveid")]
    public string WindowsLiveID {
        get {
            return GetAttributeValue<string>("windowsliveid");
        }
        set {
            SetAttributeValue("windowsliveid", value);
        }
    }
    
    /// <summary>
    /// <para>User's Yammer login email address</para>
    /// <para>Display Name: Yammer Email</para>
    /// </summary>
    [AttributeLogicalName("yammeremailaddress")]
    public string YammerEmailAddress {
        get {
            return GetAttributeValue<string>("yammeremailaddress");
        }
        set {
            SetAttributeValue("yammeremailaddress", value);
        }
    }
    
    /// <summary>
    /// <para>User's Yammer ID</para>
    /// <para>Display Name: Yammer User ID</para>
    /// </summary>
    [AttributeLogicalName("yammeruserid")]
    public string YammerUserId {
        get {
            return GetAttributeValue<string>("yammeruserid");
        }
        set {
            SetAttributeValue("yammeruserid", value);
        }
    }
    
    /// <summary>
    /// <para>Pronunciation of the first name of the user, written in phonetic hiragana or katakana characters.</para>
    /// <para>Display Name: Yomi First Name</para>
    /// </summary>
    [AttributeLogicalName("yomifirstname")]
    public string YomiFirstName {
        get {
            return GetAttributeValue<string>("yomifirstname");
        }
        set {
            SetAttributeValue("yomifirstname", value);
        }
    }
    
    /// <summary>
    /// <para>Pronunciation of the full name of the user, written in phonetic hiragana or katakana characters.</para>
    /// <para>Display Name: Yomi Full Name</para>
    /// </summary>
    [AttributeLogicalName("yomifullname")]
    public string YomiFullName {
        get {
            return GetAttributeValue<string>("yomifullname");
        }
    }
    
    /// <summary>
    /// <para>Pronunciation of the last name of the user, written in phonetic hiragana or katakana characters.</para>
    /// <para>Display Name: Yomi Last Name</para>
    /// </summary>
    [AttributeLogicalName("yomilastname")]
    public string YomiLastName {
        get {
            return GetAttributeValue<string>("yomilastname");
        }
        set {
            SetAttributeValue("yomilastname", value);
        }
    }
    
    /// <summary>
    /// <para>Pronunciation of the middle name of the user, written in phonetic hiragana or katakana characters.</para>
    /// <para>Display Name: Yomi Middle Name</para>
    /// </summary>
    [AttributeLogicalName("yomimiddlename")]
    public string YomiMiddleName {
        get {
            return GetAttributeValue<string>("yomimiddlename");
        }
        set {
            SetAttributeValue("yomimiddlename", value);
        }
    }
    
    [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referenced)]
    public IEnumerable<SystemUser> Referencedlk_systemuser_createdonbehalfby {
        get {
            return GetRelatedEntities<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lk_systemuser_createdonbehalfby", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced)]
    public IEnumerable<SystemUser> Referencedlk_systemuser_modifiedonbehalfby {
        get {
            return GetRelatedEntities<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referenced)]
    public IEnumerable<SystemUser> Referencedlk_systemuserbase_createdby {
        get {
            return GetRelatedEntities<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lk_systemuserbase_createdby", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referenced)]
    public IEnumerable<SystemUser> Referencedlk_systemuserbase_modifiedby {
        get {
            return GetRelatedEntities<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("lk_systemuserbase_modifiedby", EntityRole.Referenced, value);
        }
    }
    
    [RelationshipSchemaName("user_parent_user", EntityRole.Referenced)]
    public IEnumerable<SystemUser> Referenceduser_parent_user {
        get {
            return GetRelatedEntities<SystemUser>("user_parent_user", EntityRole.Referenced);
        }
        set {
            SetRelatedEntities("user_parent_user", EntityRole.Referenced, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referencing)]
    public SystemUser Referencinglk_systemuser_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lk_systemuser_createdonbehalfby", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing)]
    public SystemUser Referencinglk_systemuser_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referencing)]
    public SystemUser Referencinglk_systemuserbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lk_systemuserbase_createdby", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referencing)]
    public SystemUser Referencinglk_systemuserbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("lk_systemuserbase_modifiedby", EntityRole.Referencing, value);
        }
    }
    
    [AttributeLogicalName("parentsystemuserid")]
    [RelationshipSchemaName("user_parent_user", EntityRole.Referencing)]
    public SystemUser Referencinguser_parent_user {
        get {
            return GetRelatedEntity<SystemUser>("user_parent_user", EntityRole.Referencing);
        }
        set {
            SetRelatedEntity("user_parent_user", EntityRole.Referencing, value);
        }
    }
    
    [RelationshipSchemaName("lk_environmentvariabledefinition_createdby")]
    public IEnumerable<EnvironmentVariableDefinition> lk_environmentvariabledefinition_createdby {
        get {
            return GetRelatedEntities<EnvironmentVariableDefinition>("lk_environmentvariabledefinition_createdby", null);
        }
        set {
            SetRelatedEntities("lk_environmentvariabledefinition_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_environmentvariabledefinition_createdonbehalfby")]
    public IEnumerable<EnvironmentVariableDefinition> lk_environmentvariabledefinition_createdonbehalfby {
        get {
            return GetRelatedEntities<EnvironmentVariableDefinition>("lk_environmentvariabledefinition_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_environmentvariabledefinition_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_environmentvariabledefinition_modifiedby")]
    public IEnumerable<EnvironmentVariableDefinition> lk_environmentvariabledefinition_modifiedby {
        get {
            return GetRelatedEntities<EnvironmentVariableDefinition>("lk_environmentvariabledefinition_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_environmentvariabledefinition_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_environmentvariabledefinition_modifiedonbehalfby")]
    public IEnumerable<EnvironmentVariableDefinition> lk_environmentvariabledefinition_modifiedonbehalfby {
        get {
            return GetRelatedEntities<EnvironmentVariableDefinition>("lk_environmentvariabledefinition_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_environmentvariabledefinition_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_environmentvariablevalue_createdby")]
    public IEnumerable<EnvironmentVariableValue> lk_environmentvariablevalue_createdby {
        get {
            return GetRelatedEntities<EnvironmentVariableValue>("lk_environmentvariablevalue_createdby", null);
        }
        set {
            SetRelatedEntities("lk_environmentvariablevalue_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_environmentvariablevalue_createdonbehalfby")]
    public IEnumerable<EnvironmentVariableValue> lk_environmentvariablevalue_createdonbehalfby {
        get {
            return GetRelatedEntities<EnvironmentVariableValue>("lk_environmentvariablevalue_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_environmentvariablevalue_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_environmentvariablevalue_modifiedby")]
    public IEnumerable<EnvironmentVariableValue> lk_environmentvariablevalue_modifiedby {
        get {
            return GetRelatedEntities<EnvironmentVariableValue>("lk_environmentvariablevalue_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_environmentvariablevalue_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_environmentvariablevalue_modifiedonbehalfby")]
    public IEnumerable<EnvironmentVariableValue> lk_environmentvariablevalue_modifiedonbehalfby {
        get {
            return GetRelatedEntities<EnvironmentVariableValue>("lk_environmentvariablevalue_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_environmentvariablevalue_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_timezonedefinition_createdby")]
    public IEnumerable<TimeZoneDefinition> lk_timezonedefinition_createdby {
        get {
            return GetRelatedEntities<TimeZoneDefinition>("lk_timezonedefinition_createdby", null);
        }
        set {
            SetRelatedEntities("lk_timezonedefinition_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_timezonedefinition_createdonbehalfby")]
    public IEnumerable<TimeZoneDefinition> lk_timezonedefinition_createdonbehalfby {
        get {
            return GetRelatedEntities<TimeZoneDefinition>("lk_timezonedefinition_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_timezonedefinition_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_timezonedefinition_modifiedby")]
    public IEnumerable<TimeZoneDefinition> lk_timezonedefinition_modifiedby {
        get {
            return GetRelatedEntities<TimeZoneDefinition>("lk_timezonedefinition_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_timezonedefinition_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_timezonedefinition_modifiedonbehalfby")]
    public IEnumerable<TimeZoneDefinition> lk_timezonedefinition_modifiedonbehalfby {
        get {
            return GetRelatedEntities<TimeZoneDefinition>("lk_timezonedefinition_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_timezonedefinition_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_usersettings_createdonbehalfby")]
    public IEnumerable<UserSettings> lk_usersettings_createdonbehalfby {
        get {
            return GetRelatedEntities<UserSettings>("lk_usersettings_createdonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_usersettings_createdonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_usersettings_modifiedonbehalfby")]
    public IEnumerable<UserSettings> lk_usersettings_modifiedonbehalfby {
        get {
            return GetRelatedEntities<UserSettings>("lk_usersettings_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntities("lk_usersettings_modifiedonbehalfby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_usersettingsbase_createdby")]
    public IEnumerable<UserSettings> lk_usersettingsbase_createdby {
        get {
            return GetRelatedEntities<UserSettings>("lk_usersettingsbase_createdby", null);
        }
        set {
            SetRelatedEntities("lk_usersettingsbase_createdby", null, value);
        }
    }
    
    [RelationshipSchemaName("lk_usersettingsbase_modifiedby")]
    public IEnumerable<UserSettings> lk_usersettingsbase_modifiedby {
        get {
            return GetRelatedEntities<UserSettings>("lk_usersettingsbase_modifiedby", null);
        }
        set {
            SetRelatedEntities("lk_usersettingsbase_modifiedby", null, value);
        }
    }
    
    [RelationshipSchemaName("user_environmentvariabledefinition")]
    public IEnumerable<EnvironmentVariableDefinition> user_environmentvariabledefinition {
        get {
            return GetRelatedEntities<EnvironmentVariableDefinition>("user_environmentvariabledefinition", null);
        }
        set {
            SetRelatedEntities("user_environmentvariabledefinition", null, value);
        }
    }
    
    [RelationshipSchemaName("user_environmentvariablevalue")]
    public IEnumerable<EnvironmentVariableValue> user_environmentvariablevalue {
        get {
            return GetRelatedEntities<EnvironmentVariableValue>("user_environmentvariablevalue", null);
        }
        set {
            SetRelatedEntities("user_environmentvariablevalue", null, value);
        }
    }
    
    [RelationshipSchemaName("user_settings")]
    public IEnumerable<UserSettings> user_settings {
        get {
            return GetRelatedEntities<UserSettings>("user_settings", null);
        }
        set {
            SetRelatedEntities("user_settings", null, value);
        }
    }
    
    public static SystemUser Retrieve(IOrganizationService service, Guid id, params Expression<Func<SystemUser,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>Time zone definition, including name and time zone code.</para>
/// <para>Display Name: Time Zone Definition</para>
/// </summary>
[EntityLogicalName("timezonedefinition")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class TimeZoneDefinition : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "timezonedefinition";
    
    public const int EntityTypeCode = 4810;
    
    public TimeZoneDefinition() : 
            base(EntityLogicalName) {
    }
    
    public TimeZoneDefinition(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay("userinterfacename");
        }
    }
    
    [AttributeLogicalName("timezonedefinitionid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("timezonedefinitionid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the time zone record.</para>
    /// <para>Display Name: Time Zone Definition</para>
    /// </summary>
    [AttributeLogicalName("timezonedefinitionid")]
    public Guid? TimeZoneDefinitionId {
        get {
            return GetAttributeValue<Guid?>("timezonedefinitionid");
        }
        set {
            SetId("timezonedefinitionid", value);
        }
    }
    
    /// <summary>
    /// <para>Base time bias of the time zone.</para>
    /// <para>Display Name: Bias</para>
    /// </summary>
    [AttributeLogicalName("bias")]
    public int? Bias {
        get {
            return GetAttributeValue<int?>("bias");
        }
        set {
            SetAttributeValue("bias", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the time zone record.</para>
    /// <para>Display Name: Created By</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the time zone record was created.</para>
    /// <para>Display Name: Created On</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the timezonedefinition.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Time zone name for the daylight time.</para>
    /// <para>Display Name: Daylight Name</para>
    /// </summary>
    [AttributeLogicalName("daylightname")]
    public string DaylightName {
        get {
            return GetAttributeValue<string>("daylightname");
        }
        set {
            SetAttributeValue("daylightname", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who last modified the time zone record.</para>
    /// <para>Display Name: Modified By</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the time zone record was modified.</para>
    /// <para>Display Name: Modified On</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the timezonedefinition.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the organization associated with the time zone definition.</para>
    /// <para>Display Name: Organization</para>
    /// </summary>
    [AttributeLogicalName("organizationid")]
    public EntityReference OrganizationId {
        get {
            return GetAttributeValue<EntityReference>("organizationid");
        }
    }
    
    /// <summary>
    /// <para>Order an entry for a time zone definition is retired. 0 for the latest entry.</para>
    /// <para>Display Name: Retired Order</para>
    /// </summary>
    [AttributeLogicalName("retiredorder")]
    public int? RetiredOrder {
        get {
            return GetAttributeValue<int?>("retiredorder");
        }
        set {
            SetAttributeValue("retiredorder", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone name for the standard time.</para>
    /// <para>Display Name: Standard Name</para>
    /// </summary>
    [AttributeLogicalName("standardname")]
    public string StandardName {
        get {
            return GetAttributeValue<string>("standardname");
        }
        set {
            SetAttributeValue("standardname", value);
        }
    }
    
    /// <summary>
    /// <para>Time zone identification code.</para>
    /// <para>Display Name: Time Zone Code</para>
    /// </summary>
    [AttributeLogicalName("timezonecode")]
    public int? TimeZoneCode {
        get {
            return GetAttributeValue<int?>("timezonecode");
        }
        set {
            SetAttributeValue("timezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Display name for the time zone in the Microsoft Windows registry.</para>
    /// <para>Display Name: User Interface Name</para>
    /// </summary>
    [AttributeLogicalName("userinterfacename")]
    public string UserInterfaceName {
        get {
            return GetAttributeValue<string>("userinterfacename");
        }
        set {
            SetAttributeValue("userinterfacename", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_timezonedefinition_createdby")]
    public SystemUser lk_timezonedefinition_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_timezonedefinition_createdby", null);
        }
        set {
            SetRelatedEntity("lk_timezonedefinition_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_timezonedefinition_createdonbehalfby")]
    public SystemUser lk_timezonedefinition_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_timezonedefinition_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_timezonedefinition_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_timezonedefinition_modifiedby")]
    public SystemUser lk_timezonedefinition_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_timezonedefinition_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_timezonedefinition_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_timezonedefinition_modifiedonbehalfby")]
    public SystemUser lk_timezonedefinition_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_timezonedefinition_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_timezonedefinition_modifiedonbehalfby", null, value);
        }
    }
    
    public static TimeZoneDefinition Retrieve(IOrganizationService service, Guid id, params Expression<Func<TimeZoneDefinition,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

/// <summary>
/// <para>User's preferred settings.</para>
/// <para>Display Name: User Settings</para>
/// </summary>
[EntityLogicalName("usersettings")]
[DebuggerDisplay("{DebuggerDisplay,nq}")]
[DataContract()]
public partial class UserSettings : ExtendedEntity<EmptyEnum, EmptyEnum> {
    
    public const string EntityLogicalName = "usersettings";
    
    public const int EntityTypeCode = 150;
    
    public UserSettings() : 
            base(EntityLogicalName) {
    }
    
    public UserSettings(Guid Id) : 
            base(EntityLogicalName, Id) {
    }
    
    private string DebuggerDisplay {
        get {
            return GetDebuggerDisplay(null);
        }
    }
    
    [AttributeLogicalName("systemuserid")]
    public override Guid Id {
        get {
            return base.Id;
        }
        set {
            SetId("systemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user.</para>
    /// </summary>
    [AttributeLogicalName("systemuserid")]
    public Guid? SystemUserId {
        get {
            return GetAttributeValue<Guid?>("systemuserid");
        }
        set {
            SetId("systemuserid", value);
        }
    }
    
    /// <summary>
    /// <para>AM designator to use in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("amdesignator")]
    public string AMDesignator {
        get {
            return GetAttributeValue<string>("amdesignator");
        }
        set {
            SetAttributeValue("amdesignator", value);
        }
    }
    
    /// <summary>
    /// <para>Normal polling frequency used for address book synchronization in Microsoft Office Outlook.</para>
    /// </summary>
    [AttributeLogicalName("addressbooksyncinterval")]
    public int? AddressBookSyncInterval {
        get {
            return GetAttributeValue<int?>("addressbooksyncinterval");
        }
        set {
            SetAttributeValue("addressbooksyncinterval", value);
        }
    }
    
    /// <summary>
    /// <para>Default mode, such as simple or detailed, for advanced find.</para>
    /// </summary>
    [AttributeLogicalName("advancedfindstartupmode")]
    public int? AdvancedFindStartupMode {
        get {
            return GetAttributeValue<int?>("advancedfindstartupmode");
        }
        set {
            SetAttributeValue("advancedfindstartupmode", value);
        }
    }
    
    /// <summary>
    /// <para>This attribute is no longer used. The data is now in the Mailbox.AllowEmailConnectorToUseCredentials attribute.</para>
    /// </summary>
    [AttributeLogicalName("allowemailcredentials")]
    public bool? AllowEmailCredentials {
        get {
            return GetAttributeValue<bool?>("allowemailcredentials");
        }
    }
    
    /// <summary>
    /// <para>Set user status for ADC Suggestions</para>
    /// </summary>
    [AttributeLogicalName("autocaptureuserstatus")]
    public int? AutoCaptureUserStatus {
        get {
            return GetAttributeValue<int?>("autocaptureuserstatus");
        }
        set {
            SetAttributeValue("autocaptureuserstatus", value);
        }
    }
    
    /// <summary>
    /// <para>Auto-create contact on client promote</para>
    /// </summary>
    [AttributeLogicalName("autocreatecontactonpromote")]
    public int? AutoCreateContactOnPromote {
        get {
            return GetAttributeValue<int?>("autocreatecontactonpromote");
        }
        set {
            SetAttributeValue("autocreatecontactonpromote", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the business unit with which the user is associated.</para>
    /// </summary>
    [AttributeLogicalName("businessunitid")]
    public Guid? BusinessUnitId {
        get {
            return GetAttributeValue<Guid?>("businessunitid");
        }
        set {
            SetAttributeValue("businessunitid", value);
        }
    }
    
    /// <summary>
    /// <para>Calendar type for the system. Set to Gregorian US by default.</para>
    /// </summary>
    [AttributeLogicalName("calendartype")]
    public int? CalendarType {
        get {
            return GetAttributeValue<int?>("calendartype");
        }
        set {
            SetAttributeValue("calendartype", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who created the user settings.</para>
    /// </summary>
    [AttributeLogicalName("createdby")]
    public EntityReference CreatedBy {
        get {
            return GetAttributeValue<EntityReference>("createdby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the user settings object was created.</para>
    /// </summary>
    [AttributeLogicalName("createdon")]
    public DateTime? CreatedOn {
        get {
            return GetAttributeValue<DateTime?>("createdon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who created the usersettings.</para>
    /// <para>Display Name: Created By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("createdonbehalfby")]
    public EntityReference CreatedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("createdonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Number of decimal places that can be used for currency.</para>
    /// </summary>
    [AttributeLogicalName("currencydecimalprecision")]
    public int? CurrencyDecimalPrecision {
        get {
            return GetAttributeValue<int?>("currencydecimalprecision");
        }
        set {
            SetAttributeValue("currencydecimalprecision", value);
        }
    }
    
    /// <summary>
    /// <para>Information about how currency symbols are placed in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("currencyformatcode")]
    public int? CurrencyFormatCode {
        get {
            return GetAttributeValue<int?>("currencyformatcode");
        }
        set {
            SetAttributeValue("currencyformatcode", value);
        }
    }
    
    /// <summary>
    /// <para>Symbol used for currency in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("currencysymbol")]
    public string CurrencySymbol {
        get {
            return GetAttributeValue<string>("currencysymbol");
        }
        set {
            SetAttributeValue("currencysymbol", value);
        }
    }
    
    /// <summary>
    /// <para>Information that specifies the level of data validation in excel worksheets exported in a format suitable for import.</para>
    /// <para>Display Name: Data Validation Mode For Export To Excel</para>
    /// </summary>
    [AttributeLogicalName("datavalidationmodeforexporttoexcel")]
    public UserSettings_DataValidationModeForExportToExcel? DataValidationModeForExportToExcel {
        get {
            return GetOptionSetValue<UserSettings_DataValidationModeForExportToExcel>("datavalidationmodeforexporttoexcel");
        }
        set {
            SetOptionSetValue("datavalidationmodeforexporttoexcel", value);
        }
    }
    
    /// <summary>
    /// <para>Information about how the date is displayed in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("dateformatcode")]
    public int? DateFormatCode {
        get {
            return GetAttributeValue<int?>("dateformatcode");
        }
        set {
            SetAttributeValue("dateformatcode", value);
        }
    }
    
    /// <summary>
    /// <para>String showing how the date is displayed throughout Microsoft 365.</para>
    /// </summary>
    [AttributeLogicalName("dateformatstring")]
    public string DateFormatString {
        get {
            return GetAttributeValue<string>("dateformatstring");
        }
        set {
            SetAttributeValue("dateformatstring", value);
        }
    }
    
    /// <summary>
    /// <para>Character used to separate the month, the day, and the year in dates in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("dateseparator")]
    public string DateSeparator {
        get {
            return GetAttributeValue<string>("dateseparator");
        }
        set {
            SetAttributeValue("dateseparator", value);
        }
    }
    
    /// <summary>
    /// <para>Symbol used for decimal in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("decimalsymbol")]
    public string DecimalSymbol {
        get {
            return GetAttributeValue<string>("decimalsymbol");
        }
        set {
            SetAttributeValue("decimalsymbol", value);
        }
    }
    
    /// <summary>
    /// <para>Default calendar view for the user.</para>
    /// </summary>
    [AttributeLogicalName("defaultcalendarview")]
    public int? DefaultCalendarView {
        get {
            return GetAttributeValue<int?>("defaultcalendarview");
        }
        set {
            SetAttributeValue("defaultcalendarview", value);
        }
    }
    
    /// <summary>
    /// <para>Text area to enter default country code.</para>
    /// <para>Display Name: Default Country Code</para>
    /// </summary>
    [AttributeLogicalName("defaultcountrycode")]
    public string DefaultCountryCode {
        get {
            return GetAttributeValue<string>("defaultcountrycode");
        }
        set {
            SetAttributeValue("defaultcountrycode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the default dashboard.</para>
    /// </summary>
    [AttributeLogicalName("defaultdashboardid")]
    public Guid? DefaultDashboardId {
        get {
            return GetAttributeValue<Guid?>("defaultdashboardid");
        }
        set {
            SetAttributeValue("defaultdashboardid", value);
        }
    }
    
    /// <summary>
    /// <para>Default search experience for the user.</para>
    /// <para>Display Name: Default Search Experience</para>
    /// </summary>
    [AttributeLogicalName("defaultsearchexperience")]
    public UserSettings_DefaultSearchExperience? DefaultSearchExperience {
        get {
            return GetOptionSetValue<UserSettings_DefaultSearchExperience>("defaultsearchexperience");
        }
        set {
            SetOptionSetValue("defaultsearchexperience", value);
        }
    }
    
    /// <summary>
    /// <para>This attribute is no longer used. The data is now in the Mailbox.Password attribute.</para>
    /// </summary>
    [AttributeLogicalName("emailpassword")]
    public string EmailPassword {
        get {
            return GetAttributeValue<string>("emailpassword");
        }
    }
    
    /// <summary>
    /// <para>This attribute is no longer used. The data is now in the Mailbox.UserName attribute.</para>
    /// </summary>
    [AttributeLogicalName("emailusername")]
    public string EmailUsername {
        get {
            return GetAttributeValue<string>("emailusername");
        }
    }
    
    /// <summary>
    /// <para>Indicates the form mode to be used.</para>
    /// <para>Display Name: Form Mode</para>
    /// </summary>
    [AttributeLogicalName("entityformmode")]
    public UserSettings_EntityFormMode? EntityFormMode {
        get {
            return GetOptionSetValue<UserSettings_EntityFormMode>("entityformmode");
        }
        set {
            SetOptionSetValue("entityformmode", value);
        }
    }
    
    /// <summary>
    /// <para>Order in which names are to be displayed in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("fullnameconventioncode")]
    public int? FullNameConventionCode {
        get {
            return GetAttributeValue<int?>("fullnameconventioncode");
        }
        set {
            SetAttributeValue("fullnameconventioncode", value);
        }
    }
    
    /// <summary>
    /// <para>Information that specifies whether the Get Started pane in lists is enabled.</para>
    /// </summary>
    [AttributeLogicalName("getstartedpanecontentenabled")]
    public bool? GetStartedPaneContentEnabled {
        get {
            return GetAttributeValue<bool?>("getstartedpanecontentenabled");
        }
        set {
            SetAttributeValue("getstartedpanecontentenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the Help language.</para>
    /// </summary>
    [AttributeLogicalName("helplanguageid")]
    public int? HelpLanguageId {
        get {
            return GetAttributeValue<int?>("helplanguageid");
        }
        set {
            SetAttributeValue("helplanguageid", value);
        }
    }
    
    /// <summary>
    /// <para>Web site home page for the user.</para>
    /// </summary>
    [AttributeLogicalName("homepagearea")]
    public string HomepageArea {
        get {
            return GetAttributeValue<string>("homepagearea");
        }
        set {
            SetAttributeValue("homepagearea", value);
        }
    }
    
    /// <summary>
    /// <para>Configuration of the home page layout.</para>
    /// </summary>
    [AttributeLogicalName("homepagelayout")]
    public string HomepageLayout {
        get {
            return GetAttributeValue<string>("homepagelayout");
        }
        set {
            SetAttributeValue("homepagelayout", value);
        }
    }
    
    /// <summary>
    /// <para>Web site page for the user.</para>
    /// </summary>
    [AttributeLogicalName("homepagesubarea")]
    public string HomepageSubarea {
        get {
            return GetAttributeValue<string>("homepagesubarea");
        }
        set {
            SetAttributeValue("homepagesubarea", value);
        }
    }
    
    /// <summary>
    /// <para>Information that specifies whether a user account is to ignore unsolicited email (deprecated).</para>
    /// </summary>
    [AttributeLogicalName("ignoreunsolicitedemail")]
    public bool? IgnoreUnsolicitedEmail {
        get {
            return GetAttributeValue<bool?>("ignoreunsolicitedemail");
        }
        set {
            SetAttributeValue("ignoreunsolicitedemail", value);
        }
    }
    
    /// <summary>
    /// <para>Incoming email filtering method.</para>
    /// <para>Display Name: Incoming Email Filtering Method</para>
    /// </summary>
    [AttributeLogicalName("incomingemailfilteringmethod")]
    public UserSettings_IncomingEmailFilteringMethod? IncomingEmailFilteringMethod {
        get {
            return GetOptionSetValue<UserSettings_IncomingEmailFilteringMethod>("incomingemailfilteringmethod");
        }
        set {
            SetOptionSetValue("incomingemailfilteringmethod", value);
        }
    }
    
    /// <summary>
    /// <para>Show or dismiss alert for Apps for 365.</para>
    /// <para>Display Name: Show alert for Apps for 365.</para>
    /// </summary>
    [AttributeLogicalName("isappsforcrmalertdismissed")]
    public bool? IsAppsForCrmAlertDismissed {
        get {
            return GetAttributeValue<bool?>("isappsforcrmalertdismissed");
        }
        set {
            SetAttributeValue("isappsforcrmalertdismissed", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether to use the Auto Capture feature enabled or not.</para>
    /// </summary>
    [AttributeLogicalName("isautodatacaptureenabled")]
    public bool? IsAutoDataCaptureEnabled {
        get {
            return GetAttributeValue<bool?>("isautodatacaptureenabled");
        }
        set {
            SetAttributeValue("isautodatacaptureenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Enable or disable country code selection .</para>
    /// <para>Display Name: Enable Default Country Code</para>
    /// </summary>
    [AttributeLogicalName("isdefaultcountrycodecheckenabled")]
    public bool? IsDefaultCountryCodeCheckEnabled {
        get {
            return GetAttributeValue<bool?>("isdefaultcountrycodecheckenabled");
        }
        set {
            SetAttributeValue("isdefaultcountrycodecheckenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates if duplicate detection is enabled when going online.</para>
    /// </summary>
    [AttributeLogicalName("isduplicatedetectionenabledwhengoingonline")]
    public bool? IsDuplicateDetectionEnabledWhenGoingOnline {
        get {
            return GetAttributeValue<bool?>("isduplicatedetectionenabledwhengoingonline");
        }
        set {
            SetAttributeValue("isduplicatedetectionenabledwhengoingonline", value);
        }
    }
    
    /// <summary>
    /// <para>Enable or disable email conversation view on timeline wall selection.</para>
    /// </summary>
    [AttributeLogicalName("isemailconversationviewenabled")]
    public bool? IsEmailConversationViewEnabled {
        get {
            return GetAttributeValue<bool?>("isemailconversationviewenabled");
        }
        set {
            SetAttributeValue("isemailconversationviewenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Enable or disable guided help.</para>
    /// <para>Display Name: Enable Default Guided Help</para>
    /// </summary>
    [AttributeLogicalName("isguidedhelpenabled")]
    public bool? IsGuidedHelpEnabled {
        get {
            return GetAttributeValue<bool?>("isguidedhelpenabled");
        }
        set {
            SetAttributeValue("isguidedhelpenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates if the synchronization of user resource booking with Exchange is enabled at user level.</para>
    /// <para>Display Name: Resource booking synchronization enabled</para>
    /// </summary>
    [AttributeLogicalName("isresourcebookingexchangesyncenabled")]
    public bool? IsResourceBookingExchangeSyncEnabled {
        get {
            return GetAttributeValue<bool?>("isresourcebookingexchangesyncenabled");
        }
        set {
            SetAttributeValue("isresourcebookingexchangesyncenabled", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates if send as other user privilege is enabled or not.</para>
    /// </summary>
    [AttributeLogicalName("issendasallowed")]
    public bool? IsSendAsAllowed {
        get {
            return GetAttributeValue<bool?>("issendasallowed");
        }
        set {
            SetAttributeValue("issendasallowed", value);
        }
    }
    
    /// <summary>
    /// <para>Shows the last time when the traces were read from the database.</para>
    /// </summary>
    [AttributeLogicalName("lastalertsviewedtime")]
    public DateTime? LastAlertsViewedTime {
        get {
            return GetAttributeValue<DateTime?>("lastalertsviewedtime");
        }
        set {
            SetAttributeValue("lastalertsviewedtime", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user locale.</para>
    /// </summary>
    [AttributeLogicalName("localeid")]
    public int? LocaleId {
        get {
            return GetAttributeValue<int?>("localeid");
        }
        set {
            SetAttributeValue("localeid", value);
        }
    }
    
    /// <summary>
    /// <para>Information that specifies how Long Date is displayed throughout Microsoft 365.</para>
    /// </summary>
    [AttributeLogicalName("longdateformatcode")]
    public int? LongDateFormatCode {
        get {
            return GetAttributeValue<int?>("longdateformatcode");
        }
        set {
            SetAttributeValue("longdateformatcode", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the user who last modified the user settings.</para>
    /// </summary>
    [AttributeLogicalName("modifiedby")]
    public EntityReference ModifiedBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedby");
        }
    }
    
    /// <summary>
    /// <para>Date and time when the user settings object was last modified.</para>
    /// </summary>
    [AttributeLogicalName("modifiedon")]
    public DateTime? ModifiedOn {
        get {
            return GetAttributeValue<DateTime?>("modifiedon");
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the delegate user who last modified the usersettings.</para>
    /// <para>Display Name: Modified By (Delegate)</para>
    /// </summary>
    [AttributeLogicalName("modifiedonbehalfby")]
    public EntityReference ModifiedOnBehalfBy {
        get {
            return GetAttributeValue<EntityReference>("modifiedonbehalfby");
        }
    }
    
    /// <summary>
    /// <para>Information that specifies how negative currency numbers are displayed in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("negativecurrencyformatcode")]
    public int? NegativeCurrencyFormatCode {
        get {
            return GetAttributeValue<int?>("negativecurrencyformatcode");
        }
        set {
            SetAttributeValue("negativecurrencyformatcode", value);
        }
    }
    
    /// <summary>
    /// <para>Information that specifies how negative numbers are displayed in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("negativeformatcode")]
    public int? NegativeFormatCode {
        get {
            return GetAttributeValue<int?>("negativeformatcode");
        }
        set {
            SetAttributeValue("negativeformatcode", value);
        }
    }
    
    /// <summary>
    /// <para>Next tracking number.</para>
    /// </summary>
    [AttributeLogicalName("nexttrackingnumber")]
    public int? NextTrackingNumber {
        get {
            return GetAttributeValue<int?>("nexttrackingnumber");
        }
        set {
            SetAttributeValue("nexttrackingnumber", value);
        }
    }
    
    /// <summary>
    /// <para>Information that specifies how numbers are grouped in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("numbergroupformat")]
    public string NumberGroupFormat {
        get {
            return GetAttributeValue<string>("numbergroupformat");
        }
        set {
            SetAttributeValue("numbergroupformat", value);
        }
    }
    
    /// <summary>
    /// <para>Symbol used for number separation in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("numberseparator")]
    public string NumberSeparator {
        get {
            return GetAttributeValue<string>("numberseparator");
        }
        set {
            SetAttributeValue("numberseparator", value);
        }
    }
    
    /// <summary>
    /// <para>Normal polling frequency used for background offline synchronization in Microsoft Office Outlook.</para>
    /// </summary>
    [AttributeLogicalName("offlinesyncinterval")]
    public int? OfflineSyncInterval {
        get {
            return GetAttributeValue<int?>("offlinesyncinterval");
        }
        set {
            SetAttributeValue("offlinesyncinterval", value);
        }
    }
    
    /// <summary>
    /// <para>Normal polling frequency used for record synchronization in Microsoft Office Outlook.</para>
    /// </summary>
    [AttributeLogicalName("outlooksyncinterval")]
    public int? OutlookSyncInterval {
        get {
            return GetAttributeValue<int?>("outlooksyncinterval");
        }
        set {
            SetAttributeValue("outlooksyncinterval", value);
        }
    }
    
    /// <summary>
    /// <para>PM designator to use in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("pmdesignator")]
    public string PMDesignator {
        get {
            return GetAttributeValue<string>("pmdesignator");
        }
        set {
            SetAttributeValue("pmdesignator", value);
        }
    }
    
    /// <summary>
    /// <para>Information that specifies how many items to list on a page in list views.</para>
    /// </summary>
    [AttributeLogicalName("paginglimit")]
    public int? PagingLimit {
        get {
            return GetAttributeValue<int?>("paginglimit");
        }
        set {
            SetAttributeValue("paginglimit", value);
        }
    }
    
    /// <summary>
    /// <para>For internal use only.</para>
    /// </summary>
    [AttributeLogicalName("personalizationsettings")]
    public string PersonalizationSettings {
        get {
            return GetAttributeValue<string>("personalizationsettings");
        }
        set {
            SetAttributeValue("personalizationsettings", value);
        }
    }
    
    /// <summary>
    /// <para>Number of decimal places that can be used for prices.</para>
    /// </summary>
    [AttributeLogicalName("pricingdecimalprecision")]
    public int? PricingDecimalPrecision {
        get {
            return GetAttributeValue<int?>("pricingdecimalprecision");
        }
        set {
            SetAttributeValue("pricingdecimalprecision", value);
        }
    }
    
    /// <summary>
    /// <para>Picklist for selecting the user preference for reporting scripting errors.</para>
    /// <para>Display Name: Report Script Errors</para>
    /// </summary>
    [AttributeLogicalName("reportscripterrors")]
    public UserSettings_ReportScriptErrors? ReportScriptErrors {
        get {
            return GetOptionSetValue<UserSettings_ReportScriptErrors>("reportscripterrors");
        }
        set {
            SetOptionSetValue("reportscripterrors", value);
        }
    }
    
    /// <summary>
    /// <para>The version number for resource booking synchronization with Exchange.</para>
    /// <para>Display Name: User resource booking synchronization version</para>
    /// </summary>
    [AttributeLogicalName("resourcebookingexchangesyncversion")]
    public long? ResourceBookingExchangeSyncVersion {
        get {
            return GetAttributeValue<long?>("resourcebookingexchangesyncversion");
        }
        set {
            SetAttributeValue("resourcebookingexchangesyncversion", value);
        }
    }
    
    /// <summary>
    /// <para>Store selected customer service hub dashboard saved filter id.</para>
    /// </summary>
    [AttributeLogicalName("selectedglobalfilterid")]
    public Guid? SelectedGlobalFilterId {
        get {
            return GetAttributeValue<Guid?>("selectedglobalfilterid");
        }
        set {
            SetAttributeValue("selectedglobalfilterid", value);
        }
    }
    
    /// <summary>
    /// <para>Information that specifies whether to display the week number in calendar displays in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("showweeknumber")]
    public bool? ShowWeekNumber {
        get {
            return GetAttributeValue<bool?>("showweeknumber");
        }
        set {
            SetAttributeValue("showweeknumber", value);
        }
    }
    
    /// <summary>
    /// <para>For Internal use only</para>
    /// </summary>
    [AttributeLogicalName("splitviewstate")]
    public bool? SplitViewState {
        get {
            return GetAttributeValue<bool?>("splitviewstate");
        }
        set {
            SetAttributeValue("splitviewstate", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates if the company field in Microsoft Office Outlook items are set during Outlook synchronization.</para>
    /// </summary>
    [AttributeLogicalName("synccontactcompany")]
    public bool? SyncContactCompany {
        get {
            return GetAttributeValue<bool?>("synccontactcompany");
        }
        set {
            SetAttributeValue("synccontactcompany", value);
        }
    }
    
    /// <summary>
    /// <para>Information that specifies how the time is displayed in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("timeformatcode")]
    public int? TimeFormatCode {
        get {
            return GetAttributeValue<int?>("timeformatcode");
        }
        set {
            SetAttributeValue("timeformatcode", value);
        }
    }
    
    /// <summary>
    /// <para>Text for how time is displayed in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("timeformatstring")]
    public string TimeFormatString {
        get {
            return GetAttributeValue<string>("timeformatstring");
        }
        set {
            SetAttributeValue("timeformatstring", value);
        }
    }
    
    /// <summary>
    /// <para>Text for how time is displayed in Microsoft Dynamics 365.</para>
    /// </summary>
    [AttributeLogicalName("timeseparator")]
    public string TimeSeparator {
        get {
            return GetAttributeValue<string>("timeseparator");
        }
        set {
            SetAttributeValue("timeseparator", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone adjustment for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonebias")]
    public int? TimeZoneBias {
        get {
            return GetAttributeValue<int?>("timezonebias");
        }
        set {
            SetAttributeValue("timezonebias", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone for the user.</para>
    /// </summary>
    [AttributeLogicalName("timezonecode")]
    public int? TimeZoneCode {
        get {
            return GetAttributeValue<int?>("timezonecode");
        }
        set {
            SetAttributeValue("timezonecode", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone daylight adjustment for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonedaylightbias")]
    public int? TimeZoneDaylightBias {
        get {
            return GetAttributeValue<int?>("timezonedaylightbias");
        }
        set {
            SetAttributeValue("timezonedaylightbias", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone daylight day for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonedaylightday")]
    public int? TimeZoneDaylightDay {
        get {
            return GetAttributeValue<int?>("timezonedaylightday");
        }
        set {
            SetAttributeValue("timezonedaylightday", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone daylight day of week for the user. System calculated based on the time zone selected in Options.</para>
    /// </summary>
    [AttributeLogicalName("timezonedaylightdayofweek")]
    public int? TimeZoneDaylightDayOfWeek {
        get {
            return GetAttributeValue<int?>("timezonedaylightdayofweek");
        }
        set {
            SetAttributeValue("timezonedaylightdayofweek", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone daylight hour for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonedaylighthour")]
    public int? TimeZoneDaylightHour {
        get {
            return GetAttributeValue<int?>("timezonedaylighthour");
        }
        set {
            SetAttributeValue("timezonedaylighthour", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone daylight minute for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonedaylightminute")]
    public int? TimeZoneDaylightMinute {
        get {
            return GetAttributeValue<int?>("timezonedaylightminute");
        }
        set {
            SetAttributeValue("timezonedaylightminute", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone daylight month for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonedaylightmonth")]
    public int? TimeZoneDaylightMonth {
        get {
            return GetAttributeValue<int?>("timezonedaylightmonth");
        }
        set {
            SetAttributeValue("timezonedaylightmonth", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone daylight second for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonedaylightsecond")]
    public int? TimeZoneDaylightSecond {
        get {
            return GetAttributeValue<int?>("timezonedaylightsecond");
        }
        set {
            SetAttributeValue("timezonedaylightsecond", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone daylight year for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonedaylightyear")]
    public int? TimeZoneDaylightYear {
        get {
            return GetAttributeValue<int?>("timezonedaylightyear");
        }
        set {
            SetAttributeValue("timezonedaylightyear", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone standard time bias for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonestandardbias")]
    public int? TimeZoneStandardBias {
        get {
            return GetAttributeValue<int?>("timezonestandardbias");
        }
        set {
            SetAttributeValue("timezonestandardbias", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone standard day for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonestandardday")]
    public int? TimeZoneStandardDay {
        get {
            return GetAttributeValue<int?>("timezonestandardday");
        }
        set {
            SetAttributeValue("timezonestandardday", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone standard day of week for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonestandarddayofweek")]
    public int? TimeZoneStandardDayOfWeek {
        get {
            return GetAttributeValue<int?>("timezonestandarddayofweek");
        }
        set {
            SetAttributeValue("timezonestandarddayofweek", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone standard hour for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonestandardhour")]
    public int? TimeZoneStandardHour {
        get {
            return GetAttributeValue<int?>("timezonestandardhour");
        }
        set {
            SetAttributeValue("timezonestandardhour", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone standard minute for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonestandardminute")]
    public int? TimeZoneStandardMinute {
        get {
            return GetAttributeValue<int?>("timezonestandardminute");
        }
        set {
            SetAttributeValue("timezonestandardminute", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone standard month for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonestandardmonth")]
    public int? TimeZoneStandardMonth {
        get {
            return GetAttributeValue<int?>("timezonestandardmonth");
        }
        set {
            SetAttributeValue("timezonestandardmonth", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone standard second for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonestandardsecond")]
    public int? TimeZoneStandardSecond {
        get {
            return GetAttributeValue<int?>("timezonestandardsecond");
        }
        set {
            SetAttributeValue("timezonestandardsecond", value);
        }
    }
    
    /// <summary>
    /// <para>Local time zone standard year for the user. System calculated based on the time zone selected.</para>
    /// </summary>
    [AttributeLogicalName("timezonestandardyear")]
    public int? TimeZoneStandardYear {
        get {
            return GetAttributeValue<int?>("timezonestandardyear");
        }
        set {
            SetAttributeValue("timezonestandardyear", value);
        }
    }
    
    /// <summary>
    /// <para>Tracking token ID.</para>
    /// </summary>
    [AttributeLogicalName("trackingtokenid")]
    public int? TrackingTokenId {
        get {
            return GetAttributeValue<int?>("trackingtokenid");
        }
        set {
            SetAttributeValue("trackingtokenid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the default currency of the user.</para>
    /// <para>Display Name: Currency</para>
    /// </summary>
    [AttributeLogicalName("transactioncurrencyid")]
    public EntityReference TransactionCurrencyId {
        get {
            return GetAttributeValue<EntityReference>("transactioncurrencyid");
        }
        set {
            SetAttributeValue("transactioncurrencyid", value);
        }
    }
    
    /// <summary>
    /// <para>Unique identifier of the language in which to view the user interface (UI).</para>
    /// </summary>
    [AttributeLogicalName("uilanguageid")]
    public int? UILanguageId {
        get {
            return GetAttributeValue<int?>("uilanguageid");
        }
        set {
            SetAttributeValue("uilanguageid", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether to use the Microsoft Dynamics 365 appointment form within Microsoft Office Outlook for creating new appointments.</para>
    /// </summary>
    [AttributeLogicalName("usecrmformforappointment")]
    public bool? UseCrmFormForAppointment {
        get {
            return GetAttributeValue<bool?>("usecrmformforappointment");
        }
        set {
            SetAttributeValue("usecrmformforappointment", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether to use the Microsoft Dynamics 365 contact form within Microsoft Office Outlook for creating new contacts.</para>
    /// </summary>
    [AttributeLogicalName("usecrmformforcontact")]
    public bool? UseCrmFormForContact {
        get {
            return GetAttributeValue<bool?>("usecrmformforcontact");
        }
        set {
            SetAttributeValue("usecrmformforcontact", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether to use the Microsoft Dynamics 365 email form within Microsoft Office Outlook for creating new emails.</para>
    /// </summary>
    [AttributeLogicalName("usecrmformforemail")]
    public bool? UseCrmFormForEmail {
        get {
            return GetAttributeValue<bool?>("usecrmformforemail");
        }
        set {
            SetAttributeValue("usecrmformforemail", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether to use the Microsoft Dynamics 365 task form within Microsoft Office Outlook for creating new tasks.</para>
    /// </summary>
    [AttributeLogicalName("usecrmformfortask")]
    public bool? UseCrmFormForTask {
        get {
            return GetAttributeValue<bool?>("usecrmformfortask");
        }
        set {
            SetAttributeValue("usecrmformfortask", value);
        }
    }
    
    /// <summary>
    /// <para>Indicates whether image strips are used to render images.</para>
    /// </summary>
    [AttributeLogicalName("useimagestrips")]
    public bool? UseImageStrips {
        get {
            return GetAttributeValue<bool?>("useimagestrips");
        }
        set {
            SetAttributeValue("useimagestrips", value);
        }
    }
    
    /// <summary>
    /// <para>Specifies user profile ids in comma separated list.</para>
    /// </summary>
    [AttributeLogicalName("userprofile")]
    public string UserProfile {
        get {
            return GetAttributeValue<string>("userprofile");
        }
        set {
            SetAttributeValue("userprofile", value);
        }
    }
    
    [AttributeLogicalName("versionnumber")]
    public long? VersionNumber {
        get {
            return GetAttributeValue<long?>("versionnumber");
        }
    }
    
    /// <summary>
    /// <para>The layout of the visualization pane.</para>
    /// <para>Display Name: Visualization Pane Layout.</para>
    /// </summary>
    [AttributeLogicalName("visualizationpanelayout")]
    public UserSettings_VisualizationPaneLayout? VisualizationPaneLayout {
        get {
            return GetOptionSetValue<UserSettings_VisualizationPaneLayout>("visualizationpanelayout");
        }
        set {
            SetOptionSetValue("visualizationpanelayout", value);
        }
    }
    
    /// <summary>
    /// <para>Workday start time for the user.</para>
    /// </summary>
    [AttributeLogicalName("workdaystarttime")]
    public string WorkdayStartTime {
        get {
            return GetAttributeValue<string>("workdaystarttime");
        }
        set {
            SetAttributeValue("workdaystarttime", value);
        }
    }
    
    /// <summary>
    /// <para>Workday stop time for the user.</para>
    /// </summary>
    [AttributeLogicalName("workdaystoptime")]
    public string WorkdayStopTime {
        get {
            return GetAttributeValue<string>("workdaystoptime");
        }
        set {
            SetAttributeValue("workdaystoptime", value);
        }
    }
    
    [AttributeLogicalName("createdonbehalfby")]
    [RelationshipSchemaName("lk_usersettings_createdonbehalfby")]
    public SystemUser lk_usersettings_createdonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_usersettings_createdonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_usersettings_createdonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedonbehalfby")]
    [RelationshipSchemaName("lk_usersettings_modifiedonbehalfby")]
    public SystemUser lk_usersettings_modifiedonbehalfby {
        get {
            return GetRelatedEntity<SystemUser>("lk_usersettings_modifiedonbehalfby", null);
        }
        set {
            SetRelatedEntity("lk_usersettings_modifiedonbehalfby", null, value);
        }
    }
    
    [AttributeLogicalName("createdby")]
    [RelationshipSchemaName("lk_usersettingsbase_createdby")]
    public SystemUser lk_usersettingsbase_createdby {
        get {
            return GetRelatedEntity<SystemUser>("lk_usersettingsbase_createdby", null);
        }
        set {
            SetRelatedEntity("lk_usersettingsbase_createdby", null, value);
        }
    }
    
    [AttributeLogicalName("modifiedby")]
    [RelationshipSchemaName("lk_usersettingsbase_modifiedby")]
    public SystemUser lk_usersettingsbase_modifiedby {
        get {
            return GetRelatedEntity<SystemUser>("lk_usersettingsbase_modifiedby", null);
        }
        set {
            SetRelatedEntity("lk_usersettingsbase_modifiedby", null, value);
        }
    }
    
    [AttributeLogicalName("systemuserid")]
    [RelationshipSchemaName("user_settings")]
    public SystemUser user_settings {
        get {
            return GetRelatedEntity<SystemUser>("user_settings", null);
        }
        set {
            SetRelatedEntity("user_settings", null, value);
        }
    }
    
    public static UserSettings Retrieve(IOrganizationService service, Guid id, params Expression<Func<UserSettings,object>>[] attrs) {
        return service.Retrieve(id, attrs);
    }
}

public partial class XrmContext : ExtendedOrganizationServiceContext {
    
    public XrmContext(IOrganizationService service) : 
            base(service) {
    }
    
    public IQueryable<EnvironmentVariableDefinition> EnvironmentVariableDefinitionSet {
        get {
            return CreateQuery<EnvironmentVariableDefinition>();
        }
    }
    
    public IQueryable<EnvironmentVariableValue> EnvironmentVariableValueSet {
        get {
            return CreateQuery<EnvironmentVariableValue>();
        }
    }
    
    public IQueryable<SystemUser> SystemUserSet {
        get {
            return CreateQuery<SystemUser>();
        }
    }
    
    public IQueryable<TimeZoneDefinition> TimeZoneDefinitionSet {
        get {
            return CreateQuery<TimeZoneDefinition>();
        }
    }
    
    public IQueryable<UserSettings> UserSettingsSet {
        get {
            return CreateQuery<UserSettings>();
        }
    }
}

[DataContract()]
public enum EnvironmentVariableDefinitionState {
    
    [EnumMember()]
    Active = 0,
    
    [EnumMember()]
    Inactive = 1,
}

[DataContract()]
public enum EnvironmentVariableDefinition_Type {
    
    [EnumMember()]
    String = 100000000,
    
    [EnumMember()]
    Number = 100000001,
    
    [EnumMember()]
    Boolean = 100000002,
    
    [EnumMember()]
    JSON = 100000003,
    
    [EnumMember()]
    DataSource = 100000004,
}

[DataContract()]
public enum EnvironmentVariableDefinition_statuscode {
    
    [EnumMember()]
    Active = 1,
    
    [EnumMember()]
    Inactive = 2,
}

[DataContract()]
public enum EnvironmentVariableValueState {
    
    [EnumMember()]
    Active = 0,
    
    [EnumMember()]
    Inactive = 1,
}

[DataContract()]
public enum EnvironmentVariableValue_statuscode {
    
    [EnumMember()]
    Active = 1,
    
    [EnumMember()]
    Inactive = 2,
}

[DataContract()]
public enum SystemUser_AccessMode {
    
    [EnumMember()]
    ReadWrite = 0,
    
    [EnumMember()]
    Administrative = 1,
    
    [EnumMember()]
    Read = 2,
    
    [EnumMember()]
    SupportUser = 3,
    
    [EnumMember()]
    Noninteractive = 4,
    
    [EnumMember()]
    DelegatedAdmin = 5,
}

[DataContract()]
public enum SystemUser_Address1_AddressTypeCode {
    
    [EnumMember()]
    DefaultValue = 1,
}

[DataContract()]
public enum SystemUser_Address1_ShippingMethodCode {
    
    [EnumMember()]
    DefaultValue = 1,
}

[DataContract()]
public enum SystemUser_Address2_AddressTypeCode {
    
    [EnumMember()]
    DefaultValue = 1,
}

[DataContract()]
public enum SystemUser_Address2_ShippingMethodCode {
    
    [EnumMember()]
    DefaultValue = 1,
}

[DataContract()]
public enum SystemUser_CALType {
    
    [EnumMember()]
    Professional = 0,
    
    [EnumMember()]
    Administrative = 1,
    
    [EnumMember()]
    Basic = 2,
    
    [EnumMember()]
    DeviceProfessional = 3,
    
    [EnumMember()]
    DeviceBasic = 4,
    
    [EnumMember()]
    Essential = 5,
    
    [EnumMember()]
    DeviceEssential = 6,
    
    [EnumMember()]
    Enterprise = 7,
    
    [EnumMember()]
    DeviceEnterprise = 8,
    
    [EnumMember()]
    Sales = 9,
    
    [EnumMember()]
    Service = 10,
    
    [EnumMember()]
    FieldService = 11,
    
    [EnumMember()]
    ProjectService = 12,
}

[DataContract()]
public enum SystemUser_EmailRouterAccessApproval {
    
    [EnumMember()]
    Empty = 0,
    
    [EnumMember()]
    Approved = 1,
    
    [EnumMember()]
    PendingApproval = 2,
    
    [EnumMember()]
    Rejected = 3,
}

[DataContract()]
public enum SystemUser_IncomingEmailDeliveryMethod {
    
    [EnumMember()]
    None = 0,
    
    [EnumMember()]
    MicrosoftDynamics365forOutlook = 1,
    
    [EnumMember()]
    ServerSideSynchronizationorEmailRouter = 2,
    
    [EnumMember()]
    ForwardMailbox = 3,
}

[DataContract()]
public enum SystemUser_InviteStatusCode {
    
    [EnumMember()]
    InvitationNotSent = 0,
    
    [EnumMember()]
    Invited = 1,
    
    [EnumMember()]
    InvitationNearExpired = 2,
    
    [EnumMember()]
    InvitationExpired = 3,
    
    [EnumMember()]
    InvitationAccepted = 4,
    
    [EnumMember()]
    InvitationRejected = 5,
    
    [EnumMember()]
    InvitationRevoked = 6,
}

[DataContract()]
public enum SystemUser_OutgoingEmailDeliveryMethod {
    
    [EnumMember()]
    None = 0,
    
    [EnumMember()]
    MicrosoftDynamics365forOutlook = 1,
    
    [EnumMember()]
    ServerSideSynchronizationorEmailRouter = 2,
}

[DataContract()]
public enum SystemUser_PreferredAddressCode {
    
    [EnumMember()]
    MailingAddress = 1,
    
    [EnumMember()]
    OtherAddress = 2,
}

[DataContract()]
public enum SystemUser_PreferredEmailCode {
    
    [EnumMember()]
    DefaultValue = 1,
}

[DataContract()]
public enum SystemUser_PreferredPhoneCode {
    
    [EnumMember()]
    MainPhone = 1,
    
    [EnumMember()]
    OtherPhone = 2,
    
    [EnumMember()]
    HomePhone = 3,
    
    [EnumMember()]
    MobilePhone = 4,
}

[DataContract()]
public enum UserSettings_DataValidationModeForExportToExcel {
    
    [EnumMember()]
    Full = 0,
    
    [EnumMember()]
    None = 1,
}

[DataContract()]
public enum UserSettings_DefaultSearchExperience {
    
    [EnumMember()]
    Relevancesearch = 0,
    
    [EnumMember()]
    Categorizedsearch = 1,
    
    [EnumMember()]
    Uselastsearch = 2,
    
    [EnumMember()]
    Customsearch = 3,
}

[DataContract()]
public enum UserSettings_EntityFormMode {
    
    [EnumMember()]
    Organizationdefault = 0,
    
    [EnumMember()]
    Readoptimized = 1,
    
    [EnumMember()]
    Edit = 2,
}

[DataContract()]
public enum UserSettings_IncomingEmailFilteringMethod {
    
    [EnumMember()]
    Allemailmessages = 0,
    
    [EnumMember()]
    EmailmessagesinresponsetoDynamics365email = 1,
    
    [EnumMember()]
    EmailmessagesfromDynamics365LeadsContactsandAccounts = 2,
    
    [EnumMember()]
    EmailmessagesfromDynamics365recordsthatareemailenabled = 3,
    
    [EnumMember()]
    Noemailmessages = 4,
}

[DataContract()]
public enum UserSettings_ReportScriptErrors {
    
    [EnumMember()]
    AskmeforpermissiontosendanerrorreporttoMicrosoft = 1,
    
    [EnumMember()]
    AutomaticallysendanerrorreporttoMicrosoftwithoutaskingmeforpermission = 2,
    
    [EnumMember()]
    NeversendanerrorreporttoMicrosoftaboutMicrosoftDynamics365 = 3,
}

[DataContract()]
public enum UserSettings_VisualizationPaneLayout {
    
    [EnumMember()]
    Topbottom = 0,
    
    [EnumMember()]
    Sidebyside = 1,
}

[DataContract()]
public enum componentstate {
    
    [EnumMember()]
    Published = 0,
    
    [EnumMember()]
    Unpublished = 1,
    
    [EnumMember()]
    Deleted = 2,
    
    [EnumMember()]
    DeletedUnpublished = 3,
}
